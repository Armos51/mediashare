version: '3.8'
services:
  media-api-dev:
    image: 'node:14-slim'
    container_name: docker-nest-js
    build:
      context: .
      dockerfile: Dockerfile.slim
    user: 'node'
    working_dir: /usr/src/app
    environment:
      - NODE_ENV=production
      - VERSION=1.0
    volumes:
      - .:/usr/src/app
      - /usr/app/node_modules
    ports:
      - '3000:3000'
    tty: true
    command: 'npm start'

  media-api:
    container_name: media-api
    image: 'node:14-slim'
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3333:3333
    environment:
      - APP_HOST=localhost
      - NODE_ENV=container
      - APP_NAME=MediaApi
      - APP_PORT=3333
      - APP_PREFIX=api
      - APP_TITLE=Mediashare
      - DB_URL=mongodb://localhost:27017/
      - SESSION_DB_NAME=api-session
      - SESSION_SECRET=this-is-my-secret-key
      - SESSION_DB_COLLECTION=session
      - MS_PORT=4000
      - DB_TYPE=mongodb
      - DB=mediashare
      - DB_SSL=false
      - DB_SYNCHRONIZE=true
      - DB_USERNAME=mongodb
    volumes:
      - .:/usr/mediashare/apps/media-api
      - node-cache:/usr/mediashare/node_modules
    working_dir: /usr/mediashare
    depends_on:
      - db-mongo
    networks:
      - mediashare
    command: nx serve

  db-postgres:
    image: postgres
    container_name: ms-user
    restart: always
    environment:
      - POSTGRES_USER=ms-user
      - POSTGRES_PASSWORD=ms-user-pass
      - POSTGRES_DB=ms-user
      - POSTGRES_HOST_AUTH_METHOD=trust
      - PGADMIN_DEFAULT_EMAIL=user@admin.com
      - PGADMIN_DEFAULT_PASSWORD=password
    ports:
      - 5432:5432
      - 443:443
      - 80:80
    volumes:
      - ms-postgres-data/var/lib/postgres/data

  db-mongo:
    image: mongo:4.0.4
    container_name: api-mongo
    environment:
      - MONGODB_DATABASE='mediashare'
    volumes:
      - ms-mongo-data:/var/lib/mongodb/data
    ports:
      - 27017:27017

networks:
  mediashare:

volumes:
  ms-mongo-data:
  ms-postgres-data:
  node-cache:
