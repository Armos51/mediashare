// tslint:disable
/**
 * Mediashare
 * Media Share API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface MediaItemDto
 */
export interface MediaItemDto {
  /**
   *
   * @type {Date}
   * @memberof MediaItemDto
   */
  readonly createdAt: Date;
  /**
   * Created by type is generated by the @CreateDto decorator
   * @type {string}
   * @memberof MediaItemDto
   */
  createdBy: string;
  /**
   * Created by type is generated by the @CreateDto decorator
   * @type {string}
   * @memberof MediaItemDto
   */
  userId: string;
  /**
   *
   * @type {boolean}
   * @memberof MediaItemDto
   */
  isPlayable: boolean;
  /**
   *
   * @type {string}
   * @memberof MediaItemDto
   */
  summary: string;
  /**
   *
   * @type {string}
   * @memberof MediaItemDto
   */
  description: string;
  /**
   *
   * @type {string}
   * @memberof MediaItemDto
   */
  title: string;
  /**
   *
   * @type {string}
   * @memberof MediaItemDto
   */
  category: MediaItemDtoCategoryEnum;
  /**
   *
   * @type {string}
   * @memberof MediaItemDto
   */
  displayFileName: string;
  /**
   *
   * @type {string}
   * @memberof MediaItemDto
   */
  thumbnail: string;
  /**
   *
   * @type {string}
   * @memberof MediaItemDto
   */
  uri: string;
}

export function MediaItemDtoFromJSON(json: any): MediaItemDto {
  return {
    createdAt: new Date(json['createdAt']),
    createdBy: json['createdBy'],
    userId: json['userId'],
    isPlayable: json['isPlayable'],
    summary: json['summary'],
    description: json['description'],
    title: json['title'],
    category: json['category'],
    displayFileName: json['displayFileName'],
    thumbnail: json['thumbnail'],
    uri: json['uri'],
  };
}

export function MediaItemDtoToJSON(value?: MediaItemDto): any {
  if (value === undefined) {
    return undefined;
  }
  return {
    createdBy: value.createdBy,
    userId: value.userId,
    isPlayable: value.isPlayable,
    summary: value.summary,
    description: value.description,
    title: value.title,
    category: value.category,
    displayFileName: value.displayFileName,
    thumbnail: value.thumbnail,
    uri: value.uri,
  };
}

/**
 * @export
 * @enum {string}
 */
export enum MediaItemDtoCategoryEnum {
  Strength = 'strength',
  Flexibility = 'flexibility',
  Endurance = 'endurance',
}
