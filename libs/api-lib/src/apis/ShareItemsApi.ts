// tslint:disable
/**
 *
 * Media Share API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, OperationOpts, RawAjaxResponse } from '../runtime';
import { ShareItem } from '../models';

/**
 * no description
 */
export class ShareItemsApi extends BaseAPI {
  /**
   */
  shareItemsControllerFindAll(): Observable<Array<ShareItem>>;
  shareItemsControllerFindAll(opts?: OperationOpts): Observable<RawAjaxResponse<Array<ShareItem>>>;
  shareItemsControllerFindAll(opts?: OperationOpts): Observable<Array<ShareItem> | RawAjaxResponse<Array<ShareItem>>> {
    const headers: HttpHeaders = {
      ...(this.configuration.username != null && this.configuration.password != null
        ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` }
        : undefined),
    };

    return this.request<Array<ShareItem>>(
      {
        url: '/api/share-items',
        method: 'GET',
        headers,
      },
      opts?.responseOpts
    );
  }

  /**
   */
  shareItemsControllerFindOne(): Observable<ShareItem>;
  shareItemsControllerFindOne(opts?: OperationOpts): Observable<RawAjaxResponse<ShareItem>>;
  shareItemsControllerFindOne(opts?: OperationOpts): Observable<ShareItem | RawAjaxResponse<ShareItem>> {
    const headers: HttpHeaders = {
      ...(this.configuration.username != null && this.configuration.password != null
        ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` }
        : undefined),
    };

    return this.request<ShareItem>(
      {
        url: '/api/share-items/{id}',
        method: 'GET',
        headers,
      },
      opts?.responseOpts
    );
  }

  /**
   */
  shareItemsControllerRemove(): Observable<ShareItem>;
  shareItemsControllerRemove(opts?: OperationOpts): Observable<RawAjaxResponse<ShareItem>>;
  shareItemsControllerRemove(opts?: OperationOpts): Observable<ShareItem | RawAjaxResponse<ShareItem>> {
    const headers: HttpHeaders = {
      ...(this.configuration.username != null && this.configuration.password != null
        ? { Authorization: `Basic ${btoa(this.configuration.username + ':' + this.configuration.password)}` }
        : undefined),
    };

    return this.request<ShareItem>(
      {
        url: '/api/share-items/{id}',
        method: 'DELETE',
        headers,
      },
      opts?.responseOpts
    );
  }
}
