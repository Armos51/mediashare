{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/media-api/src/app/app.controller.ts","webpack:///./apps/media-api/src/app/app.module.ts","webpack:///./apps/media-api/src/app/app.service.ts","webpack:///./apps/media-api/src/app/controllers/media-item/dto/create-media-item.dto.ts","webpack:///./apps/media-api/src/app/controllers/media-item/dto/media-item.dto.ts","webpack:///./apps/media-api/src/app/controllers/media-item/dto/update-media-item.dto.ts","webpack:///./apps/media-api/src/app/controllers/media-item/entities/media-item.entity.ts","webpack:///./apps/media-api/src/app/controllers/media-item/media-item.controller.ts","webpack:///./apps/media-api/src/app/controllers/media-item/media-item.decorator.ts","webpack:///./apps/media-api/src/app/controllers/media-item/media-item.module.ts","webpack:///./apps/media-api/src/app/controllers/media-item/media-item.service.ts","webpack:///./apps/media-api/src/app/controllers/playlist/dto/create-playlist-response.dto.ts","webpack:///./apps/media-api/src/app/controllers/playlist/dto/create-playlist.dto.ts","webpack:///./apps/media-api/src/app/controllers/playlist/dto/playlist-response-item.dto.ts","webpack:///./apps/media-api/src/app/controllers/playlist/dto/playlist-response.dto.ts","webpack:///./apps/media-api/src/app/controllers/playlist/dto/update-playlist.dto.ts","webpack:///./apps/media-api/src/app/controllers/playlist/entities/playlist.entity.ts","webpack:///./apps/media-api/src/app/controllers/playlist/playlist.controller.ts","webpack:///./apps/media-api/src/app/controllers/playlist/playlist.decorator.ts","webpack:///./apps/media-api/src/app/controllers/playlist/playlist.module.ts","webpack:///./apps/media-api/src/app/controllers/playlist/services/playlist.service.ts","webpack:///./apps/media-api/src/app/controllers/profile/entities/profile.entity.ts","webpack:///./apps/media-api/src/app/controllers/profile/profile.controller.ts","webpack:///./apps/media-api/src/app/controllers/profile/profile.module.ts","webpack:///./apps/media-api/src/app/controllers/profile/profile.service.ts","webpack:///./apps/media-api/src/app/controllers/share-items/share-items.controller.ts","webpack:///./apps/media-api/src/app/controllers/share-items/share-items.decorator.ts","webpack:///./apps/media-api/src/app/controllers/share-items/share-items.module.ts","webpack:///./apps/media-api/src/app/controllers/user/decorators/user-response.decorator.ts","webpack:///./apps/media-api/src/app/controllers/user/dto/create-user.dto.ts","webpack:///./apps/media-api/src/app/controllers/user/dto/login.dto.ts","webpack:///./apps/media-api/src/app/controllers/user/dto/update-user.dto.ts","webpack:///./apps/media-api/src/app/controllers/user/entities/user.entity.ts","webpack:///./apps/media-api/src/app/controllers/user/user.controller.ts","webpack:///./apps/media-api/src/app/controllers/user/user.module.ts","webpack:///./apps/media-api/src/app/controllers/user/users.controller.ts","webpack:///./apps/media-api/src/app/core/decorators/create-dto.decorator.ts","webpack:///./apps/media-api/src/app/core/decorators/user.decorator.ts","webpack:///./apps/media-api/src/app/core/entities/base.entity.ts","webpack:///./apps/media-api/src/app/core/functors/http-errors.functor.ts","webpack:///./apps/media-api/src/app/core/index.ts","webpack:///./apps/media-api/src/app/core/middleware/jwt-decode.middleware.ts","webpack:///./apps/media-api/src/app/core/models/data-provider.model.ts","webpack:///./apps/media-api/src/app/index.ts","webpack:///./apps/media-api/src/app/modules/app-config.module.ts/app-config.module.ts","webpack:///./apps/media-api/src/app/modules/app-config.module.ts/app-config.provider.ts","webpack:///./apps/media-api/src/app/modules/app-config.module.ts/configuration.ts","webpack:///./apps/media-api/src/app/modules/app-config.module.ts/constants/open-api.constants.ts","webpack:///./apps/media-api/src/app/modules/app-config.module.ts/database.configuration.ts","webpack:///./apps/media-api/src/app/modules/auth/auth.module.ts","webpack:///./apps/media-api/src/app/modules/auth/auth.service.ts","webpack:///./apps/media-api/src/app/modules/auth/guards/jwt-auth.guard.ts","webpack:///./apps/media-api/src/app/modules/auth/guards/local.guard.ts","webpack:///./apps/media-api/src/app/modules/auth/jwt.strategy.ts","webpack:///./apps/media-api/src/app/modules/auth/local.strategy.ts","webpack:///./apps/media-api/src/app/modules/auth/session.serializer.ts","webpack:///./apps/media-api/src/app/modules/auth/user.service.ts","webpack:///./apps/media-api/src/app/modules/playlist-item/entities/playlist-item.entity.ts","webpack:///./apps/media-api/src/app/modules/playlist-item/functors/map-playlist-item.functor.ts","webpack:///./apps/media-api/src/app/modules/playlist-item/services/playlist-item.service.ts","webpack:///./apps/media-api/src/app/modules/share-item/entities/share-item.entity.ts","webpack:///./apps/media-api/src/app/modules/share-item/services/share-item.service.ts","webpack:///./apps/media-api/src/app/modules/share-item/share-item.module.ts","webpack:///./apps/media-api/src/main.ts","webpack:///./libs/core/src/index.ts","webpack:///./libs/core/src/lib/core.ts","webpack:///./libs/core/src/lib/models/abstract/model.ts","webpack:///./libs/core/src/lib/models/account.model.ts","webpack:///./libs/core/src/lib/models/api-defaults.model.ts","webpack:///./libs/core/src/lib/models/categories.model.ts","webpack:///./libs/core/src/lib/models/feed.model.ts","webpack:///./libs/core/src/lib/models/index.ts","webpack:///./libs/core/src/lib/models/roles.enum.ts","webpack:///./libs/core/src/lib/models/roles.model.ts","webpack:///./libs/core/src/lib/models/validators.ts","webpack:///./libs/core/src/lib/tokens/auth-tokens.constant.ts","webpack:///./libs/core/src/lib/tokens/entity-tokens.const.ts","webpack:///./libs/core/src/lib/tokens/index.ts","webpack:///./libs/core/src/lib/tokens/path-segment-variable-tokens.constant.ts","webpack:///./libs/core/src/lib/types/index.ts","webpack:///./libs/shared/src/index.ts","webpack:///./libs/shared/src/lib/decorators/api-array.decorator.ts","webpack:///./libs/shared/src/lib/decorators/api-date.decorator.ts","webpack:///./libs/shared/src/lib/decorators/api-object-id.decorator.ts","webpack:///./libs/shared/src/lib/decorators/api-response.decorator.ts","webpack:///./libs/shared/src/lib/decorators/api-string.decorator.ts","webpack:///./libs/shared/src/lib/decorators/index.ts","webpack:///./libs/shared/src/lib/factories/document-builder.factory.ts","webpack:///./libs/shared/src/lib/factories/index.ts","webpack:///./libs/shared/src/lib/factories/session-store.factory.ts","webpack:///./libs/shared/src/lib/index.ts","webpack:///./libs/shared/src/lib/interceptors/created-by.interceptor.ts","webpack:///./libs/shared/src/lib/interceptors/index.ts","webpack:///./libs/shared/src/lib/models/api-decorator-defaults.model.ts","webpack:///./libs/shared/src/lib/models/api-parameters.model.ts","webpack:///./libs/shared/src/lib/models/api-uuid.model.ts","webpack:///./libs/shared/src/lib/models/index.ts","webpack:///./libs/shared/src/lib/pipes/index.ts","webpack:///./libs/shared/src/lib/pipes/object-id.pipe.ts","webpack:///./libs/utility/src/functors/object-id.guard.ts","webpack:///./libs/utility/src/functors/promise-wrapper.functor.ts","webpack:///./libs/utility/src/index.ts","webpack:///./libs/utility/src/models/primitive-keys.model.ts","webpack:///./libs/utility/src/types/index.ts","webpack:///./libs/utility/src/utility.module.ts","webpack:///./libs/utility/src/utility.service.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/config\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/jwt\"","webpack:///external \"@nestjs/microservices\"","webpack:///external \"@nestjs/passport\"","webpack:///external \"@nestjs/swagger\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"bcrypt\"","webpack:///external \"bson\"","webpack:///external \"class-validator\"","webpack:///external \"compression\"","webpack:///external \"connect-mongo\"","webpack:///external \"express\"","webpack:///external \"express-session\"","webpack:///external \"fs\"","webpack:///external \"joi\"","webpack:///external \"mongodb\"","webpack:///external \"nestjs-pino\"","webpack:///external \"passport\"","webpack:///external \"passport-jwt\"","webpack:///external \"passport-local\"","webpack:///external \"remeda\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Controller, Get } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { AppService } from './app.service';\n\nApiTags('Main');\n@Controller()\nexport class AppController {\n  constructor() {}\n\n  @ApiResponse({ description: 'Used to validate that the app is online and connectivity is enabled', status: 200 })\n  @Get('online-status')\n  isOnline() {\n    return true;\n  }\n}\n","import { AuthModule } from './modules/auth/auth.module';\nimport { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserModule } from './controllers/user/user.module';\nimport { LoggerModule } from 'nestjs-pino';\nimport { MediaItemModule } from './controllers/media-item/media-item.module';\nimport { ProfileModule } from './controllers/profile/profile.module';\nimport { PlaylistModule } from './controllers/playlist/playlist.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { ShareItemsModule } from './controllers/share-items/share-items.module';\nimport { AppConfigModule } from './modules/app-config.module.ts/app-config.module';\nimport { AppConfigService } from './modules/app-config.module.ts/app-config.provider';\n\n@Module({\n  imports: [\n    AuthModule,\n    AppConfigModule,\n\n    TypeOrmModule.forRootAsync({\n      imports: [AppConfigModule],\n      useFactory: (configService: AppConfigService) => ({\n        autoLoadEntities: true,\n        type: configService.db('type'),\n        url: configService.db('url'),\n        username: configService.db('username'),\n        password: configService.db('password'),\n        database: configService.db('database'),\n        entities: configService.db('entities'),\n        synchronize: configService.db('synchronize'),\n        ssl: configService.db('ssl'),\n        useUnifiedTopology: true,\n        useNewUrlParser: true,\n      }),\n      inject: [AppConfigService],\n    }),\n    UserModule,\n    LoggerModule.forRoot({\n      pinoHttp: {\n        prettyPrint: {\n          colorize: true,\n          levelFirst: true,\n          translateTime: 'UTC:mm/dd/yyyy, h:MM:ss TT Z',\n        },\n      },\n    }),\n    MediaItemModule,\n    ProfileModule,\n    PlaylistModule,\n    PassportModule,\n    ShareItemsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {\n  constructor(private appConfigService: AppConfigService) {}\n}\n","import { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Welcome to media-api!' };\n  }\n\n  constructor() {}\n}\n","import { ObjectId } from 'mongodb';\nimport { MediaItem } from '../entities/media-item.entity';\nimport { IsBoolean, IsIn, IsMongoId, IsString, MaxLength, MinLength } from 'class-validator';\nimport { ApiProperty, OmitType, PickType } from '@nestjs/swagger';\nimport { ApiDefaults, MediaCategoryType, MEDIA_CATEGORY, Stats } from '@core-lib';\nimport { Tag } from '../../../core/entities/tag.entity';\nimport { ApiObjectId, ApiString, ApiUriString } from '@mediashare/shared';\n\n// const CreateKeys:  Readonly<keyof MediaItem[]> = [ 'summary', 'isPlayable', 'description', 'title', 'category', 'userId' ] as const;\nconst OPTIONAL_MEDIA_DTO_KEYS = ['_id', 'displayFileName', 'thumbnail', 'uri', 'updatedDate'] as const;\nexport class CreateMediaItemDto extends OmitType(MediaItem, [...OPTIONAL_MEDIA_DTO_KEYS]) {\n  @IsBoolean()\n  @ApiProperty({ required: true })\n  isPlayable: boolean;\n\n  @IsString()\n  @ApiProperty({ required: true })\n  summary: string;\n\n  @IsString()\n  @MinLength(ApiDefaults.longString.min)\n  @MaxLength(ApiDefaults.longString.max)\n  @ApiProperty({ required: true })\n  description: string;\n\n  @ApiObjectId({ required: true })\n  userId: NonNullable<ObjectId>;\n\n  @IsString()\n  @MinLength(ApiDefaults.longString.min)\n  @MaxLength(ApiDefaults.longString.max)\n  @ApiProperty({ required: true })\n  title: string;\n\n  @ApiProperty({ required: true, enum: MEDIA_CATEGORY })\n  @IsIn(MEDIA_CATEGORY)\n  category: MediaCategoryType;\n}\n\nexport class AdditionalMediaItemDto extends CreateMediaItemDto {\n  @ApiString()\n  displayFileName: string;\n\n  @ApiUriString()\n  thumbnail?: string;\n\n  @ApiUriString()\n  uri: string;\n}\n","import { IntersectionType } from '@nestjs/swagger';\nimport { AdditionalMediaItemDto, CreateMediaItemDto } from './create-media-item.dto';\n\nexport class MediaItemDto extends IntersectionType(CreateMediaItemDto, AdditionalMediaItemDto) {}\n","import { PartialType } from '@nestjs/swagger';\nimport { MediaItem } from '../entities/media-item.entity';\n\nexport class UpdateMediaItemDto extends PartialType(MediaItem) {}\n","import { BcEntity } from '@api';\nimport { MediaCategoryType, MEDIA_CATEGORY, MEDIA_ITEM_ENTITY } from '@core-lib';\nimport { ApiLongString, ApiObjectId, ApiString, ApiUriString } from '@mediashare/shared';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsArray, IsBoolean, IsIn } from 'class-validator';\nimport { ObjectId } from 'mongodb';\nimport { Column, Entity, Index } from 'typeorm';\nexport const MEDIA_TOKEN = MEDIA_ITEM_ENTITY;\n\n@Entity(MEDIA_TOKEN)\nexport class MediaItem extends BcEntity {\n  constructor(props: Partial<MediaItem> = {}) {\n    super();\n    Object.assign(this, props);\n  }\n  @Column()\n  @IsBoolean()\n  @ApiProperty({ required: true })\n  isPlayable: boolean;\n\n  @ApiObjectId()\n  @Index('userId')\n  @Column({ nullable: false, unique: false })\n  userId: ObjectId;\n\n  @Column()\n  @ApiLongString()\n  summary: string;\n  @ApiString({ required: true })\n  description: string;\n\n  @ApiString()\n  @Column({ nullable: true, type: 'text' })\n  title: string;\n\n  @ApiString()\n  @Column()\n  displayFileName: string;\n\n  @Column()\n  @ApiUriString({ required: false })\n  thumbnail?: string;\n  @Column()\n  @ApiUriString()\n  uri: string;\n\n  @Column()\n  @ApiProperty({ enum: MEDIA_CATEGORY })\n  @IsArray()\n  @IsIn(MEDIA_CATEGORY)\n  category: MediaCategoryType;\n}\n","import { Controller, Get, Post, Body, Put, Param, Delete, Res, HttpStatus, UseGuards } from '@nestjs/common';\nimport { Response } from 'express';\nimport { ApiBody, ApiParam, ApiTags } from '@nestjs/swagger';\n\nimport { MediaItemService } from './media-item.service';\nimport { CreateMediaItemDto } from './dto/create-media-item.dto';\nimport { UpdateMediaItemDto } from './dto/update-media-item.dto';\n\nimport { notFoundResponse } from '../../core/functors/http-errors.functor';\n\nimport { ShareItemService } from '../../modules/share-item/services/share-item.service';\nimport { JwtAuthGuard } from '../../modules/auth/guards/jwt-auth.guard';\nimport { MEDIA_CATEGORY } from '@core-lib';\nimport { ObjectId } from 'mongodb';\nimport { MediaGetResponse, MediaPostResponse } from './media-item.decorator';\nimport { ObjectIdPipe } from '@mediashare/shared';\nimport { CreateDto } from '../../core/decorators/create-dto.decorator';\nimport RouteTokens from '../../modules/app-config.module.ts/constants/open-api.constants';\nimport { GetUserId } from '../../core/decorators/user.decorator';\nimport { ShareItem } from '../../modules/share-item/entities/share-item.entity';\n\n@ApiTags('media-items')\n@Controller('media-items')\nexport class MediaItemController {\n  constructor(private readonly mediaItemService: MediaItemService, private shareItemService: ShareItemService) {}\n\n  /**\n   * Create a new user\n\n   *\n   * @param {CreateMediaItemDto} createMediaItemDto\n   * @param {SessionUserInterface} user\n   * @return {*}\n   * @memberof MediaItemController\n   */\n  @Post()\n  @MediaPostResponse()\n  create(@CreateDto() createMediaItemDto: CreateMediaItemDto) {\n    return this.mediaItemService.create(createMediaItemDto);\n  }\n\n  /* TODO: findout what this needs to be */\n  @Get()\n  @MediaGetResponse({ isArray: true })\n  findAll() {\n    return this.mediaItemService.findAll();\n  }\n\n  @Get('categories')\n  getCategories() {\n    return MEDIA_CATEGORY;\n  }\n\n  @MediaGetResponse()\n  @Get(RouteTokens.MEDIA_ITEM_ID)\n  @ApiParam({ name: 'mediaId', type: String, required: true })\n  async findOne(@Param('mediaId', new ObjectIdPipe()) mediaId: ObjectId) {\n    const mediaItem = await this.mediaItemService.findOne(mediaId);\n\n    if (!mediaItem) throw notFoundResponse('mediaItem', { args: { mediaId } });\n    return mediaItem;\n  }\n\n  @MediaPostResponse()\n  @Put(RouteTokens.MEDIA_ITEM_ID)\n  @ApiParam({ name: 'mediaId', type: String, required: true })\n  @ApiBody({ type: UpdateMediaItemDto })\n  update(@Param('mediaId', ObjectIdPipe) mediaId: ObjectId, @Body() updateMediaItemDto: UpdateMediaItemDto) {\n    return this.mediaItemService.update(mediaId, updateMediaItemDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(RouteTokens.MEDIA_ITEM_ID)\n  @ApiParam({ name: 'mediaId', type: String, required: true })\n  async remove(@Param('mediaId') mediaId: string) {\n    const deleted = await this.mediaItemService.remove(mediaId);\n\n    if (!deleted) throw notFoundResponse(mediaId);\n\n    return deleted;\n  }\n\n  @Post(':mediaId/share/:userId')\n  @MediaPostResponse({ type: ShareItem })\n  @ApiParam({ name: 'mediaId', type: String, required: true })\n  @ApiParam({ name: 'userId', type: String, required: true })\n  async share(\n    @Param('mediaId', new ObjectIdPipe()) mediaId: ObjectId,\n    @Param('userId', new ObjectIdPipe()) userId: ObjectId,\n    @GetUserId() createdBy: ObjectId,\n    @Res() response: Response\n  ) {\n    console.log('the id', mediaId);\n    const { title } = await this.mediaItemService.findOne(mediaId);\n    if (!title && !createdBy) return response.status(HttpStatus.NOT_FOUND);\n\n    const shareItem = await this.shareItemService.createMediaShareItem({\n      createdBy,\n      userId,\n      mediaId,\n      title,\n    });\n    response.status(HttpStatus.CREATED);\n\n    return response.send(shareItem);\n  }\n}\n","import { ApiControllerDecoratorParams } from '@mediashare/shared';\nimport { applyDecorators } from '@nestjs/common';\nimport { ApiBody, ApiResponse } from '@nestjs/swagger';\nimport { UseJwtGuard } from '../../modules/auth/auth.decorator';\nimport { CreateMediaItemDto } from './dto/create-media-item.dto';\nimport { MediaItem } from './entities/media-item.entity';\n\nfunction MediaPostResponse({ isArray = false, type = MediaItem, description }: ApiControllerDecoratorParams = {}) {\n  return applyDecorators(\n    ApiResponse({ description, type, status: 201, isArray }),\n    ApiBody({ type: CreateMediaItemDto }),\n    // UseJwtGuard()\n  );\n}\n\nconst MediaGetResponse = function ({ isArray = false, type = MediaItem }: ApiControllerDecoratorParams = {}) {\n  return applyDecorators(\n    ApiResponse({ type, isArray, status: 200 }),\n    // UseJwtGuard()\n  );\n};\n\nexport { MediaGetResponse, MediaPostResponse };\n","import { Module } from '@nestjs/common';\nimport { MediaItemService } from './media-item.service';\nimport { MediaItemController } from './media-item.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { MediaItem } from './entities/media-item.entity';\nimport { ShareItemModule } from '../../modules/share-item/share-item.module';\nimport { AuthModule } from '../../modules/auth/auth.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([MediaItem]), ShareItemModule, AuthModule],\n  controllers: [MediaItemController],\n  providers: [MediaItemService],\n})\nexport class MediaItemModule {}\n","import { DataService } from '@api';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ObjectId } from 'mongodb';\nimport { PinoLogger } from 'nestjs-pino';\nimport { MongoRepository } from 'typeorm';\nimport { MediaItem } from './entities/media-item.entity';\n\nimport * as R from 'remeda';\n@Injectable()\nexport class MediaItemService extends DataService<MediaItem, MongoRepository<MediaItem>> {\n  constructor(\n    @InjectRepository(MediaItem)\n    mediaRepository: MongoRepository<MediaItem>,\n    logger: PinoLogger\n  ) {\n    super(mediaRepository, logger);\n  }\n\n  findPlaylistMedia(idStrings: ObjectId[]) {\n    return this.repository.find({\n      where: {\n        $or: R.map(idStrings, (id) => ({\n          _id: id,\n        })),\n      },\n    });\n  }\n\n  findMediaItemsByUserId(userId: ObjectId) {\n    return this.repository.find({ userId });\n  }\n}\n","import { ApiProperty } from '@nestjs/swagger';\nimport { PlaylistItem } from '../../../modules/playlist-item/entities/playlist-item.entity';\nimport { Playlist } from '../entities/playlist.entity';\n\nclass CreatePlaylistResponseDto {\n  @ApiProperty({ readOnly: true, type: Playlist })\n  playlist: Playlist;\n\n  @ApiProperty()\n  playlistItems: PlaylistItem[];\n}\n\nexport { Playlist, CreatePlaylistResponseDto };\n","import { ApiProperty, PickType } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\nimport { Playlist } from '../entities/playlist.entity';\nexport class CreatePlaylistDto extends PickType(Playlist, ['category', 'title', 'createdBy', 'userId']) {\n  @ApiProperty({ isArray: true, type: 'string', writeOnly: true, required: true })\n  @IsArray()\n  mediaIds: Readonly<string[]>;\n}\n","import { BcEntity } from '@api';\nimport { ApiObjectId, ApiString } from '@mediashare/shared';\nimport { ApiProperty, IntersectionType, OmitType } from '@nestjs/swagger';\nimport { ObjectId } from 'mongodb';\nimport { PlaylistItem } from '../../../modules/playlist-item/entities/playlist-item.entity';\nimport { MediaItem } from '../../media-item/entities/media-item.entity';\n\nclass PlaylistItemCreatedBy extends BcEntity {\n  @ApiString()\n  username: string;\n}\nexport class PlaylistItemResponseDto extends IntersectionType(OmitType(MediaItem, ['createdBy']), PlaylistItem) {\n  @ApiObjectId()\n  playlistItemId: ObjectId;\n  // @ApiProperty({ type: () => PlaylistItemCreatedBy })\n  // createdBy: PlaylistItemCreatedBy;\n}\n","import { ApiProperty, PickType } from '@nestjs/swagger';\nimport { Playlist } from '../entities/playlist.entity';\nimport { PlaylistItemResponseDto } from './playlist-response-item.dto';\n\nclass PlaylistResponseDto extends PickType(Playlist, ['_id']) {\n  @ApiProperty({ name: 'playlist media items for user', type: () => PlaylistItemResponseDto, description: 'Playlist response DTO' })\n  mediaItems: PlaylistItemResponseDto[];\n}\n\nexport { PlaylistItemResponseDto, PlaylistResponseDto };\n","import { ApiProperty, PickType } from '@nestjs/swagger';\nimport { IsArray } from 'class-validator';\nimport { PlaylistItem } from '../../../modules/playlist-item/entities/playlist-item.entity';\nimport { Playlist } from '../entities/playlist.entity';\n\nexport class UpdatePlaylistDto extends PickType(Playlist, ['title', 'category']) {\n  @ApiProperty({ required: false })\n  @IsArray()\n  items?: PlaylistItem[];\n}\n","import { BcEntity } from '@api';\nimport { PlaylistCategoryType, PlaylistInterface, PLAYLIST_CATEGORY, PLAYLIST_ENTITY } from '@core-lib';\nimport { ApiObjectId, ApiString } from '@mediashare/shared';\nimport { ApiProperty, IntersectionType } from '@nestjs/swagger';\nimport { IsIn } from 'class-validator';\nimport { ObjectId } from 'mongodb';\nimport { Column, Entity, ObjectIdColumn, Index } from 'typeorm';\nimport { PlaylistItem } from '../../../modules/playlist-item/entities/playlist-item.entity';\n\n@Entity('playlist')\nexport class Playlist extends BcEntity implements PlaylistInterface {\n  @Column('title')\n  @ApiString()\n  title: string;\n\n  @ApiObjectId()\n  @Column('userId')\n  @Index('userId', { unique: false })\n  userId: ObjectId;\n\n  @Column({ type: 'enum', enum: PLAYLIST_CATEGORY })\n  @ApiProperty({ required: true, enum: PLAYLIST_CATEGORY })\n  @IsIn(PLAYLIST_CATEGORY)\n  category: PlaylistCategoryType;\n}\n\nclass PlaylistResponseFields {\n  @ApiProperty({ type: PlaylistItem, isArray: true })\n  playlistItems: Readonly<PlaylistItem[]>;\n}\n\nexport class PlaylistByUserResponseDto extends IntersectionType(PlaylistResponseFields, Playlist) {}\n","import { Controller, Get, Post, Body, Put, Param, Delete, Res, HttpStatus } from '@nestjs/common';\nimport { Response } from 'express';\n\nimport { ApiBody, ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ObjectId } from 'mongodb';\nimport { CreatePlaylistDto } from './dto/create-playlist.dto';\nimport { UpdatePlaylistDto } from './dto/update-playlist.dto';\nimport { PlaylistService } from './services/playlist.service';\nimport { ShareItemService } from '../../modules/share-item/services/share-item.service';\nimport { PLAYLIST_CATEGORY } from '@core-lib';\nimport { GetUserId } from '../../core/decorators/user.decorator';\nimport { PlaylistGetResponse, PlaylistPostResponse } from './playlist.decorator';\nimport { UseJwtGuard } from '../../modules/auth/auth.decorator';\nimport { ObjectIdPipe } from '@mediashare/shared';\nimport { ShareItem } from '../../modules/share-item/entities/share-item.entity';\nimport { PlaylistResponseDto } from './dto/playlist-response.dto';\nimport { CreatePlaylistResponseDto } from './dto/create-playlist-response.dto';\nimport { CreateDto } from '../../core/decorators/create-dto.decorator';\nimport { PlaylistItem } from '../../modules/playlist-item/entities/playlist-item.entity';\n\nconst PLAYLIST_ID_TOKEN = ':playlistId';\n@ApiTags('playlists')\n@Controller('playlists')\nexport class PlaylistController {\n  constructor(private readonly playlistService: PlaylistService, private shareItemService: ShareItemService) {}\n\n  @PlaylistPostResponse({ type: CreatePlaylistResponseDto })\n  @Post()\n  @ApiBody({ type: CreatePlaylistDto })\n  async create(@CreateDto() createPlaylistDto: CreatePlaylistDto, @GetUserId() userId: ObjectId) {\n    console.log('dto', createPlaylistDto);\n    return await this.playlistService.createPlaylistWithItems({ ...createPlaylistDto, userId });\n  }\n\n  @PlaylistGetResponse({ isArray: true, type: PlaylistItem })\n  @Get()\n  findAll() {\n    return this.playlistService.findAll();\n  }\n\n  @Get('categories')\n  getCategories() {\n    return { categories: PLAYLIST_CATEGORY };\n  }\n\n  @PlaylistGetResponse({ type: PlaylistResponseDto })\n  @ApiParam({\n    name: 'playlistId',\n    required: true,\n    type: 'string',\n    example: new ObjectId().toHexString(),\n  })\n  @Get(PLAYLIST_ID_TOKEN)\n  @ApiParam({ name: 'playlistId', type: String, required: true })\n  findOne(@Param('playlistId', new ObjectIdPipe()) playlistId: ObjectId) {\n    return this.playlistService.getPlaylistById({ playlistId });\n  }\n\n  @Put(PLAYLIST_ID_TOKEN)\n  @ApiParam({ name: 'playlistId', type: String, required: true })\n  update(@Param('playlistId', new ObjectIdPipe()) playlistId: ObjectId, @GetUserId() userId: ObjectId, @Body() updatePlaylistDto: UpdatePlaylistDto) {\n    const { ...rest } = updatePlaylistDto;\n    return this.playlistService.update(playlistId, { ...rest, userId });\n  }\n\n  @Delete(PLAYLIST_ID_TOKEN)\n  // @UseJwtGuard()\n  @ApiParam({ name: 'playlistId', type: String, required: true })\n  remove(@Param('playlistId') playlistId: string) {\n    return this.playlistService.remove(playlistId);\n  }\n\n  @Post([':playlistId', ' share', ':userId'])\n  @ApiParam({ name: 'playlistId', type: String, required: true })\n  @ApiParam({ name: 'userId', type: String, required: true })\n  @PlaylistPostResponse({ type: ShareItem, isArray: true })\n  async share(\n    @Param('playlistId', new ObjectIdPipe()) playlistId: ObjectId,\n    @Param('userId', new ObjectIdPipe()) userId: ObjectId,\n\n    @GetUserId() createdBy: ObjectId,\n    @Res() response: Response\n  ) {\n    const shareItem = await this.shareItemService.createPlaylistShareItem({ createdBy, userId, playlistId });\n\n    return response.status(HttpStatus.CREATED).send(shareItem);\n  }\n}\n","import { ApiControllerDecoratorParams } from '@mediashare/shared';\nimport { applyDecorators } from '@nestjs/common';\nimport { ApiResponse } from '@nestjs/swagger';\nimport { UseJwtGuard } from '../../modules/auth/auth.decorator';\nimport { Playlist } from './entities/playlist.entity';\n\nfunction PlaylistPostResponse({ isArray = false, type = Playlist, description }: ApiControllerDecoratorParams = {}) {\n  return applyDecorators(\n    ApiResponse({ description, type, status: 201, isArray }),\n    // UseJwtGuard()\n  );\n}\n\nconst PlaylistGetResponse = function ({ isArray = false, type = Playlist }: ApiControllerDecoratorParams = {}) {\n  return applyDecorators(\n    ApiResponse({ type, isArray, status: 200 }),\n    // UseJwtGuard()\n  );\n};\n\nexport { PlaylistPostResponse, PlaylistGetResponse };\n","import { Module } from '@nestjs/common';\nimport { PlaylistController } from './playlist.controller';\nimport { Playlist } from './entities/playlist.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PlaylistService } from './services/playlist.service';\nimport { MediaItem } from '../media-item/entities/media-item.entity';\nimport { PlaylistItem } from '../../modules/playlist-item/entities/playlist-item.entity';\nimport { PlaylistItemService } from '../../modules/playlist-item/services/playlist-item.service';\nimport { ShareItemModule } from '../../modules/share-item/share-item.module';\nimport { AuthModule } from '../../modules/auth/auth.module';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Playlist, MediaItem, PlaylistItem]), ShareItemModule, AuthModule],\n  controllers: [PlaylistController],\n  providers: [PlaylistService, PlaylistItemService],\n})\nexport class PlaylistModule {}\n","import { DataService } from '@api';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ObjectId } from 'mongodb';\nimport { PinoLogger } from 'nestjs-pino';\nimport { MongoRepository } from 'typeorm';\nimport { mapPlaylistItems } from '../../../modules/playlist-item/functors/map-playlist-item.functor';\nimport { Playlist, PlaylistByUserResponseDto } from '../entities/playlist.entity';\n\nimport { PlaylistItemService } from '../../../modules/playlist-item/services/playlist-item.service';\nimport { PlaylistItem } from '../../../modules/playlist-item/entities/playlist-item.entity';\n\nimport * as R from 'remeda';\nimport { CreatePlaylistDto } from '../dto/create-playlist.dto';\n\nimport { OptionalObjectIdParameters } from '@mediashare/shared';\nimport { UserService } from '../../../modules/auth/user.service';\n\ntype CreatePlaylistParameters = {\n  playlistId: ObjectId;\n  items: Partial<PlaylistItem>[];\n  createdBy: ObjectId;\n};\n@Injectable()\nexport class PlaylistService extends DataService<Playlist, MongoRepository<Playlist>> {\n  constructor(\n    @InjectRepository(Playlist)\n    repository: MongoRepository<Playlist>,\n    logger: PinoLogger,\n    private userService: UserService,\n    private playlistItemService: PlaylistItemService\n  ) {\n    super(repository, logger);\n  }\n\n  /**\n   *\n   *\n   * @param {{ mediaIds: string[]; userId: ObjectId }} { userId, mediaIds }\n   * @memberof PlaylistService\n   */\n  async createPlaylistWithItems({ createdBy, userId, mediaIds, title = '' }: CreatePlaylistDto) {\n    if (!userId || typeof userId === 'string') throw new Error('userId is string in createPlaylistWithItems');\n\n    const playlist = await this.create({ userId, title, createdBy });\n\n    const { _id: playlistId } = playlist;\n\n    const playlistItems = await this.createPlaylistItems({\n      playlistId,\n      createdBy,\n      items: mapPlaylistItems(mediaIds, { userId, playlistId }),\n    });\n\n    return { playlist, playlistItems };\n  }\n\n  /**\n   *\n   *\n   * @param {{ playlistId: ObjectId; items: Partial<PlaylistItem>[] }} { playlistId, items }\n   * @return {*}\n   * @memberof PlaylistService\n   */\n  createPlaylistItems({ playlistId, items, createdBy }: CreatePlaylistParameters) {\n    if (!items || items.length < 1) throw new Error('no items in createPlaylistItems');\n\n    if (!playlistId || typeof playlistId === 'string') throw new Error('wrong type in createPlaylistItems.id');\n\n    const mappedItems = items.map((item) => ({ ...item, playlistId, createdBy }));\n\n    return this.playlistItemService.insertMany(mappedItems);\n  }\n\n  findPlaylistsByList(ObjectIds: ObjectId[]): Promise<PlaylistByUserResponseDto[]> {\n    return this.repository\n      .aggregate([\n        {\n          $match: {\n            where: {\n              $or: R.map(ObjectIds, (id) => ({\n                _id: id,\n              })),\n            },\n          },\n        },\n      ])\n      .toArray();\n  }\n\n  async queryPlaylistsById(playlistIds: ObjectId[]) {\n    return this.repository.find({\n      where: {\n        $or: R.map(playlistIds, (id) => ({\n          _id: id,\n        })),\n      },\n    });\n  }\n\n  /* FIXME: hack-around for getting a user when one doesn't exist */\n  async getPlaylistByUserId({ userId }: OptionalObjectIdParameters = { userId: null }) {\n    if (userId === null || !userId) {\n      const defaultUsername = 'admin@example.com';\n      const user = await this.userService.findByQuery({ username: defaultUsername });\n      return await this.playlistItemService.aggregatePlaylistAndItemByIdField({ userId: user._id });\n    }\n    return await this.playlistItemService.aggregatePlaylistAndItemByIdField({ userId });\n  }\n  getPlaylistById({ playlistId }: OptionalObjectIdParameters) {\n    return this.playlistItemService.aggregatePlaylistAndItemByIdField({\n      playlistId,\n    });\n  }\n\n  findall() {\n    return this.playlistItemService.findAll();\n  }\n}\n","import { Entity } from 'typeorm';\nimport { BcBaseEntity } from '@api';\n\n@Entity()\nexport class Profile extends BcBaseEntity<Profile> {}\n","import { Controller, Get, Post, Body, Put, Param, Delete } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\n\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n}\n","import { Module } from '@nestjs/common';\nimport { ProfileService } from './profile.service';\nimport { ProfileController } from './profile.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Profile } from './entities/profile.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Profile])],\n  controllers: [ProfileController],\n  providers: [ProfileService],\n})\nexport class ProfileModule {}\n","import { DataService } from '@api';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PinoLogger } from 'nestjs-pino';\nimport { MongoRepository } from 'typeorm';\nimport { Profile } from './entities/profile.entity';\n\n@Injectable()\nexport class ProfileService extends DataService<\n  Profile,\n  MongoRepository<Profile>\n> {\n  constructor(\n    @InjectRepository(Profile)\n    userRepository: MongoRepository<Profile>,\n    logger: PinoLogger\n  ) {\n    super(userRepository, logger);\n  }\n}\n","import { Controller, Get, Param, Delete } from '@nestjs/common';\nimport { ShareItemService } from '../../modules/share-item/services/share-item.service';\nimport { GetUserId } from '../../core/decorators/user.decorator';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { ShareItemGetResponse } from './share-items.decorator';\nimport { ObjectIdPipe } from '@mediashare/shared';\nimport { ObjectId } from 'mongodb';\nimport RouteTokens from '../../modules/app-config.module.ts/constants/open-api.constants';\n\n@ApiTags('share-items')\n@Controller('share-items')\nexport class ShareItemsController {\n  constructor(private readonly shareItemService: ShareItemService) {}\n\n  @ShareItemGetResponse({ isArray: true })\n  @Get()\n  async findAll(@GetUserId() userId: ObjectId) {\n    const [sharedMedia, sharedPlaylists] = await Promise.all(this.shareItemService.findShareItemsByUserId(userId));\n\n    return { sharedMedia, sharedPlaylists };\n  }\n\n  @ShareItemGetResponse()\n  @Get(RouteTokens.SHARE_ID)\n  @ApiParam({ name: 'shareId', type: String, required: true })\n  findOne(@Param('shareId', new ObjectIdPipe()) shareId: ObjectId) {\n    return this.shareItemService.findOne(shareId);\n  }\n\n  @ShareItemGetResponse()\n  @Delete(':shareId')\n  @ApiParam({ name: 'shareId', type: String, required: true })\n  remove(@Param('shareId', new ObjectIdPipe()) shareId: ObjectId) {\n    return this.shareItemService.remove(shareId);\n  }\n}\n","import { ApiControllerDecoratorParams } from '@mediashare/shared';\nimport { applyDecorators } from '@nestjs/common';\nimport { ApiResponse } from '@nestjs/swagger';\nimport { UseJwtGuard } from '../../modules/auth/auth.decorator';\nimport { ShareItem } from '../../modules/share-item/entities/share-item.entity';\n\nfunction ShareItemPostResponse({ isArray = false, type = ShareItem, description }: ApiControllerDecoratorParams = {}) {\n  return applyDecorators(\n    ApiResponse({ description, type, status: 201, isArray }),\n    // UseJwtGuard()\n  );\n}\n\nconst ShareItemGetResponse = function ({ isArray = false, type = ShareItem }: ApiControllerDecoratorParams = {}) {\n  return applyDecorators(\n    ApiResponse({ type, isArray, status: 200 }),\n    // UseJwtGuard()\n  );\n};\n\nexport { ShareItemPostResponse, ShareItemGetResponse };\n","import { Module } from '@nestjs/common';\nimport { ShareItemsController } from './share-items.controller';\nimport { ShareItemModule } from '../../modules/share-item/share-item.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JwtStrategy } from '../../modules/auth/jwt.strategy';\nimport { AuthModule } from '../../modules/auth/auth.module';\nimport { ShareItem } from '../../modules/share-item/entities/share-item.entity';\n\n@Module({\n  imports: [ShareItemModule, TypeOrmModule.forFeature([ShareItem]), AuthModule],\n  controllers: [ShareItemsController],\n  providers: [JwtStrategy],\n})\nexport class ShareItemsModule {}\n","import { ApiControllerDecoratorParams } from '@mediashare/shared';\nimport { applyDecorators } from '@nestjs/common';\nimport { ApiBody, ApiResponse } from '@nestjs/swagger';\nimport { UseJwtGuard } from '../../../modules/auth/auth.decorator';\nimport { UserDto } from '../dto/create-user.dto';\n\nfunction UserPostResponse({ isArray = false, type = UserDto, description }: ApiControllerDecoratorParams = {}) {\n  return applyDecorators(\n    ApiResponse({ description, type, status: 201, isArray }),\n    // UseJwtGuard()\n  );\n}\n\nconst UserGetResponse = function ({ isArray = false, type = UserDto }: ApiControllerDecoratorParams = {}) {\n  return applyDecorators(\n    ApiResponse({ type, isArray, status: 200 }),\n    // UseJwtGuard()\n  );\n};\n\nexport { UserPostResponse, UserGetResponse };\n","import { ApiHideProperty, ApiProperty, IntersectionType, OmitType } from '@nestjs/swagger';\nimport { IsArray, IsUUID } from 'class-validator';\n\nimport { ApiEmail, ApiName, ApiObjectId, ApiPastDate, ApiString, ObjectIdArray } from '@mediashare/shared';\nimport { BC_ROLES, BcRolesType } from '@core-lib';\nimport { ObjectId } from 'mongodb';\nimport { LoginDto } from './login.dto';\nimport { User } from '../entities/user.entity';\n\nconst uuidExample = '1731ee8a-8f27-53af-805d-2ee2e705f0e2';\nexport class CreateUserDto extends LoginDto {\n  @ApiName({ required: true })\n  firstName: string;\n\n  @ApiName({ required: true })\n  lastName: string;\n}\n\nexport class UserAuthFieldsDto {\n  @ApiObjectId({ required: true })\n  _id: Readonly<ObjectId>;\n\n  @ApiProperty({\n    type: String,\n    readOnly: true,\n    example: uuidExample,\n    maxLength: uuidExample.length,\n    minLength: uuidExample.length\n  })\n  @IsUUID()\n  authId: Readonly<string>;\n\n  @ApiEmail()\n  email: Readonly<string>;\n\n  @ApiPastDate({ readOnly: false })\n  createdAt: Readonly<Date>;\n\n  @ApiProperty({ enum: BC_ROLES })\n  @IsArray()\n  roles: BcRolesType[];\n}\n\nexport class UserDto extends IntersectionType(OmitType(User, ['_id', 'userId']), OmitType(UserAuthFieldsDto, ['_id'])) {\n  @ApiHideProperty()\n  password: string;\n  constructor(user: Partial<User>) {\n    super();\n    Object.assign(this, user);\n  }\n}\n","import { ApiEmail } from '@mediashare/shared';\nimport { ApiHideProperty, ApiProperty, OmitType } from '@nestjs/swagger';\nimport { IsString, MinLength, MaxLength, IsJWT } from 'class-validator';\nimport { MediaItem } from '../../media-item/entities/media-item.entity';\nimport { Playlist } from '../../playlist/entities/playlist.entity';\nimport { User } from '../entities/user.entity';\nconst exampleToken =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.yJ1c2VyIjp7ImF1dGhJZCI6ImEwMWM4ZDhjLWExYTMtNDdjMS05MGVjLTY0ZmRkOTFiYjYxMSIsInVzZXJuYW1lIjoiTmFkaWExMkBnbWFpbC5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRRQy9KYXlWeDhYOHZYVUhjUmpSSWZPLmdXaGQ1U0FEYmFNbC9CeXgvUjdvVGJYSzRnQ1IyLiIsImVtYWlsIjoiTmFkaWExMkBnbWFpbC5jb20iLCJjcmVhdGVkQXQiOiIyMDIxLTAzLTA1VDEyOjA2OjMzLjgzMVoiLCJfaWQiOiI2MDQyMWVjOTdiYmVlYTA2ZGZiZjI2ZGEiLCJyb2xlcyI6WyJndWVzdCJdfSwic3ViIjoiYTAxYzhkOGMtYTFhMy00N2MxLTkwZWMtNjRmZGQ5MWJiNjExIiwiaWF0IjoxNjE0OTQ2MDI4LCJleHAiOjE2MTQ5ODIwMjh9.ZK5s6OFB8zQ0yL3SgzYZXpjTMJyptXv5FouDyqQVlg';\n\nexport class LoginDto {\n  @ApiEmail({ required: true })\n  username: string;\n\n  @ApiProperty({ required: true })\n  @IsString()\n  @MinLength(8)\n  @MaxLength(20)\n  @ApiHideProperty()\n  password: string;\n}\n\nexport class LoginResponseDto extends OmitType(\n  User,\n\n  ['_id', 'userId', 'sharedMediaItems', 'sharedPlaylists']\n) {\n  @ApiProperty({\n    type: String,\n    pattern: '^[A-Za-z0-9-_=]+\\\\.[A-Za-z0-9-_=]+\\\\.?[A-Za-z0-9-_.+/=]*$',\n    example: exampleToken\n  })\n  accessToken;\n\n  @ApiProperty({ type: Date })\n  updatedAt: Date;\n\n  @ApiProperty({ type: String })\n  _id: string;\n\n  @ApiProperty({ type: MediaItem, isArray: true })\n  sharedMediaItems: MediaItem[];\n\n  @ApiProperty({ type: Playlist, isArray: true })\n  sharedPlaylists: Playlist[];\n\n  @ApiProperty({ type: MediaItem, isArray: true })\n  mediaItems: MediaItem[];\n\n  @ApiProperty({ type: Playlist, isArray: true })\n  playlists: Playlist[];\n}\n\nexport class TokenDto {\n  @ApiProperty({\n    type: String,\n    example: exampleToken,\n    pattern: '^[A-Za-z0-9-_=]+\\\\.[A-Za-z0-9-_=]+\\\\.?[A-Za-z0-9-_.+/=]*$'\n  })\n  @IsJWT()\n  token: string;\n}\n","import { PartialType } from '@nestjs/swagger';\nimport { User } from '../entities/user.entity';\n\nexport class UpdateUserDto extends PartialType(User) {}\n","import { IsEmail, Min } from 'class-validator';\nimport { ObjectId } from 'mongodb';\nimport { Entity, Column, BeforeInsert, CreateDateColumn, UpdateDateColumn, Unique } from 'typeorm';\nimport { BcBaseEntity, BcEntity } from '../../../core';\nimport { bcRoles, BcRolesType, BC_ROLES } from '@core-lib';\nimport { hash } from 'bcrypt';\n\n@Entity()\nexport class User extends BcEntity {\n  @Column() username: string;\n\n  @Column() firstName: string;\n  @Column() lastName: string;\n\n  @Column({ nullable: true })\n  @Min(8)\n  password?: string;\n  @Column({ array: true, nullable: true }) sharedPlaylists?: ObjectId[];\n  @Column({ array: true, nullable: true }) sharedMediaItems?: ObjectId[];\n\n  @BeforeInsert()\n  async hashPassword() {\n    this.password = await hash(this.password, 10);\n  }\n\n  // @Column('enum', { default: [bcRoles.guest], array: true, enum: BC_ROLES })\n  // roles: BcRolesType[];\n  // @Column()\n  // @IsEmail()\n  // email: string;\n\n  // @CreateDateColumn()\n  // createdAt: Date;\n\n  // @UpdateDateColumn()\n  // updatedAt: Date;\n}\n","import { Body, Controller, Get, HttpCode, HttpStatus, Param, Post, UnauthorizedException, UseGuards, Req, Res } from '@nestjs/common';\nimport { Response, Request } from 'express';\nimport { ApiBearerAuth, ApiBody, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { GetUser, GetUserId } from '../../core/decorators/user.decorator';\nimport { JwtAuthGuard } from '../../modules/auth/guards/jwt-auth.guard';\nimport { UserService } from '../../modules/auth/user.service';\nimport { PlaylistService } from '../playlist/services/playlist.service';\nimport { UserGetResponse } from './decorators/user-response.decorator';\nimport { LoginDto, LoginResponseDto, TokenDto } from './dto/login.dto';\nimport { SessionUserInterface } from '../../core/models/auth-user.model';\nimport { MediaItemDto } from '../media-item/dto/media-item.dto';\nimport { ShareItemService } from '../../modules/share-item/services/share-item.service';\nimport { ShareItem } from '../../modules/share-item/entities/share-item.entity';\nimport { MediaItemService } from '../media-item/media-item.service';\nimport { ObjectId } from 'mongodb';\nimport { LocalGuard } from '../../modules/auth/guards/local.guard';\nimport { Playlist } from '../playlist/entities/playlist.entity';\n@ApiTags('user')\n@Controller({ path: ['user', 'share', 'media-items', 'playlists'] })\nexport class UserController {\n  constructor(\n    private userService: UserService,\n    private playlistService: PlaylistService,\n    private shareItemService: ShareItemService,\n    private mediaItemService: MediaItemService\n  ) {}\n\n  @Get()\n  @UserGetResponse()\n  async getUser(@GetUser() user: SessionUserInterface) {\n    const { _id = null } = user;\n\n    const [mongoUser, authUser] = await Promise.all([this.userService.findOne(_id), this.userService.getAuthUser({ _id })]);\n    return { ...authUser, ...mongoUser };\n  }\n\n  @HttpCode(HttpStatus.OK)\n  @UseGuards(LocalGuard)\n  @Post('login')\n  @ApiBody({ type: LoginDto, required: true })\n  @ApiResponse({ type: LoginResponseDto, status: 200 })\n  async login(@Req() req: Request) {\n    const expressUser = req.user;\n\n    const user = await this.userService.findByQuery({ username: req.body.username });\n    return { ...expressUser, ...user };\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Post('logout')\n  @ApiBearerAuth()\n  async logout(@Req() req: Request, @Res() res: Response) {\n    try {\n      req.logout();\n    } catch {\n      return res.status(HttpStatus.OK).send();\n    }\n  }\n\n  @Get('playlists')\n  @UserGetResponse({ type: Playlist, status: 200 })\n  async getPlaylists(@GetUser() user: SessionUserInterface) {\n    const result = await this.playlistService.getPlaylistByUserId({ userId: user._id });\n\n    console.log(result);\n    return result;\n  }\n\n  @Get('media-items')\n  @UserGetResponse()\n  async getMediaItems(@GetUserId() userId: ObjectId) {\n    const result = await this.mediaItemService.findMediaItemsByUserId(userId);\n\n    return result;\n  }\n\n  @Get('media-items/shared')\n  @UserGetResponse({ type: MediaItemDto, isArray: true })\n  getSharedMediaItems(@GetUser() user: SessionUserInterface = null) {\n    const { _id: userId } = user;\n\n    return this.shareItemService.aggregateSharedMediaItems({ userId });\n  }\n  @Get('playlists/shared')\n  @UserGetResponse({ isArray: true, type: ShareItem })\n  async getMyShareItems(@GetUser() user: SessionUserInterface = null) {\n    const { _id: userId } = user;\n\n    return await this.shareItemService.aggregateSharedPlaylists({ userId });\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @HttpCode(HttpStatus.OK)\n  @Post('authorize')\n  async authorize(@Param(':id') id: string, @Body() body: TokenDto) {\n    const { token = null } = body;\n    const valid = await this.userService.validateToken({ token, _id: id });\n    if (!valid) throw new UnauthorizedException();\n    return valid;\n  }\n}\n","import { UserController } from './user.controller';\nimport { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\nimport { PlaylistService } from '../playlist/services/playlist.service';\nimport { Playlist } from '../playlist/entities/playlist.entity';\nimport { PlaylistItemService } from '../../modules/playlist-item/services/playlist-item.service';\nimport { PlaylistItem } from '../../modules/playlist-item/entities/playlist-item.entity';\nimport { MediaItemService } from '../media-item/media-item.service';\nimport { MediaItem } from '../media-item/entities/media-item.entity';\nimport { ShareItemModule } from '../../modules/share-item/share-item.module';\nimport { JwtDecodeMiddleware } from '../../core/middleware/jwt-decode.middleware';\nimport { AuthModule } from '../../modules/auth/auth.module';\n\n@Module({\n  imports: [AuthModule, TypeOrmModule.forFeature([User, Playlist, PlaylistItem, MediaItem]), ShareItemModule],\n  controllers: [UserController, UsersController],\n  providers: [PlaylistService, PlaylistItemService, MediaItemService],\n  exports: [],\n})\nexport class UserModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(JwtDecodeMiddleware).forRoutes(UsersController);\n  }\n}\n","import { Controller, Get, Post, Body, Put, Param, Delete, HttpStatus, UseGuards, HttpCode, Request } from '@nestjs/common';\nimport { CreateUserDto, UserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBody, ApiHideProperty, ApiParam, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { User } from './entities/user.entity';\nimport { DeleteResult } from 'typeorm';\nimport { PlaylistService } from '../playlist/services/playlist.service';\nimport { ShareItemService } from '../../modules/share-item/services/share-item.service';\n\nimport { ObjectId } from 'mongodb';\nimport { conflictResponse } from '../../core/functors/http-errors.functor';\nimport { JwtAuthGuard } from '../../modules/auth/guards/jwt-auth.guard';\nimport { UserService } from '../../modules/auth/user.service';\nimport { BcRolesType, BC_ROLES } from '@core-lib';\nimport { UserGetResponse, UserPostResponse } from './decorators/user-response.decorator';\nimport { createUserResponseDto } from './dto/create-user-response.dto';\nimport { SessionUserInterface } from '../../core/models/auth-user.model';\nimport { GetUser } from '../../core/decorators/user.decorator';\nimport { ObjectIdPipe } from '@mediashare/shared';\nimport { CreateDto } from '../../core/decorators/create-dto.decorator';\nimport RouteTokens from '../../modules/app-config.module.ts/constants/open-api.constants';\nimport { PlaylistResponseDto } from '../playlist/dto/playlist-response.dto';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly userService: UserService, private playlistService: PlaylistService, private shareItemService: ShareItemService) {}\n\n  @Post()\n  @ApiResponse({ type: UserDto, status: 200, isArray: false })\n  @ApiBody({ type: CreateUserDto, required: true })\n  async create(@CreateDto() createUserDto: CreateUserDto) {\n    const { username } = createUserDto;\n    const existingUser = await this.userService.checkIfUserExists(username);\n    if (existingUser) {\n      console.log(existingUser, 'exists already');\n      throw conflictResponse(username);\n    }\n\n    const mongoUser = await this.userService.createUser(createUserDto);\n\n    return mongoUser;\n  }\n\n  @UserGetResponse({ isArray: true })\n  @Get()\n  findAll(): Promise<User[]> {\n    return this.userService.findAll();\n  }\n\n  @Get(RouteTokens.USER_ID)\n  @ApiParam({ name: 'userId', type: String, required: true })\n  @UserGetResponse()\n  findOne(@Param('userId', ObjectIdPipe) userId: ObjectId): Promise<User> {\n    return this.userService.findOne(userId);\n  }\n\n  @Put(RouteTokens.USER_ID)\n  @ApiParam({ name: 'userId', type: String, required: true })\n  @UserPostResponse()\n  update(@Param('userId', ObjectIdPipe) userId: ObjectId, @Body() updateUserDto: UpdateUserDto): Promise<Partial<User>> {\n    return this.userService.update(userId, updateUserDto);\n  }\n\n  @Delete(RouteTokens.USER_ID)\n  @ApiParam({ name: 'userId', type: String, required: true })\n  @UseGuards(JwtAuthGuard)\n  remove(@Param('userId') userId: string): Promise<DeleteResult> {\n    return this.userService.remove(userId);\n  }\n\n  @Get(':userId/playlists')\n  @UserGetResponse({ type: PlaylistResponseDto, isArray: true })\n  @ApiParam({ name: 'userId', type: String, required: true })\n  @ApiHideProperty()\n  getPlaylists(@Param('userId', ObjectIdPipe) userId: ObjectId) {\n    return this.playlistService.getPlaylistByUserId({ userId });\n  }\n\n  @Put(':userId/roles')\n  @UserPostResponse({ type: UserDto })\n  @ApiBody({ enum: BC_ROLES, isArray: true })\n  setRoles(@Param('userId') id: string, @Body() params: { roles: BcRolesType[] }) {\n    const { roles = [] } = params;\n    return this.userService.setRoles(id, roles);\n  }\n\n  /* shared with others */\n  @HttpCode(HttpStatus.OK)\n  @UseGuards(JwtAuthGuard)\n  @Post('shared-items/:shareId')\n  @ApiParam({ name: 'shareId', type: String, required: true })\n  @ApiResponse({ type: UserDto, status: 200 })\n  async readSharedItem(@Param('shareId', new ObjectIdPipe()) shareId: ObjectId) {\n    const sharedItem = await this.shareItemService.update(shareId, { read: true });\n\n    return sharedItem;\n  }\n}\n","import { createParamDecorator, ExecutionContext } from '@nestjs/common';\nimport { ObjectIdGuard } from '@util-lib';\n\nexport const CreateDto = createParamDecorator((data, context: ExecutionContext) => {\n  const ctx = context.switchToHttp().getRequest();\n  const user = ctx.session?.passport?.user ?? null;\n  return { ...ctx.body, createdBy: ObjectIdGuard(user?._id) };\n});\n","import { createParamDecorator, ExecutionContext } from '@nestjs/common';\nimport { ObjectIdGuard } from '@util-lib';\nimport { ObjectId } from 'mongodb';\n\nexport const GetUser = createParamDecorator((data, context: ExecutionContext) => {\n  const ctx = context.switchToHttp().getRequest();\n  const user = ctx.session?.passport?.user ?? null;\n\n  return user ? { ...user, _id: new ObjectId(user._id) } : {};\n});\n\nexport const GetUserId = createParamDecorator((data, context: ExecutionContext) => {\n  const ctx = context.switchToHttp().getRequest();\n  const user = ctx.session?.passport?.user ?? null;\n  return user?._id ? ObjectIdGuard(user._id) : {};\n});\n","import { BcBaseInterface, IdType } from '@core-lib';\nimport { ApiObjectId, ApiPastDate } from '@mediashare/shared';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ObjectId } from 'bson';\nimport { ObjectIdColumn, Entity, CreateDateColumn, UpdateDateColumn, Column } from 'typeorm';\n\nexport type DeepPartial<T> = {\n  [P in keyof T]?: T[P] extends Array<infer U>\n    ? Array<DeepPartial<U>>\n    : T[P] extends ReadonlyArray<infer U>\n    ? ReadonlyArray<DeepPartial<U>>\n    : DeepPartial<T[P]> | T[P];\n};\n\nexport abstract class BcBaseEntity<M> implements BcBaseInterface {\n  @ObjectIdColumn()\n  _id: ObjectId;\n\n  constructor(model?: Partial<M>) {\n    Object.assign(this, model);\n  }\n}\n\n@Entity()\nexport class BcEntity implements BcBaseInterface {\n  @ObjectIdColumn()\n  @ApiObjectId({ type: 'uuid' })\n  _id: ObjectId;\n\n  @CreateDateColumn()\n  @ApiProperty({ readOnly: true, type: Date })\n  readonly createdAt?: Date;\n\n  @UpdateDateColumn()\n  @ApiPastDate({ readOnly: true, type: Date, required: false })\n  readonly updatedDate?: Date;\n\n  @Column()\n  @ApiObjectId({\n    description: 'Created by type is generated by the @CreateDto decorator',\n  })\n  readonly createdBy?: Readonly<ObjectId>;\n\n  @Column()\n  @ApiObjectId({\n    description: 'Created by type is generated by the @CreateDto decorator',\n  })\n  userId?: ObjectId;\n}\n","import { ConflictException, HttpException, HttpStatus } from '@nestjs/common';\n\n/**\n * Return a new exception when the request is a bad request.\n *\n * @param {string} error\n * @return Http Exception with status of 400\n */\nfunction badRequestResponse(error: string) {\n  return new HttpException({ status: HttpStatus.BAD_REQUEST, error }, HttpStatus.BAD_REQUEST);\n}\n\n/**\n * Return a new exception when resource not found\n *\n * @param {string} entity\n * @param {{ args?: any }} [opts]\n * @return Http Exception with status of 404\n */\nfunction notFoundResponse(entity: string, opts?: { args?: any }) {\n  const { args = null } = opts;\n  return new HttpException(\n    { status: HttpStatus.NOT_FOUND, error: `${entity} was not found`, ...(args ?? args) },\n    HttpStatus.NOT_FOUND\n  );\n}\n\nfunction conflictResponse(id: string) {\n  return new ConflictException(id, 'Resource already exists.');\n}\n\nexport { badRequestResponse, notFoundResponse, conflictResponse };\n","export * from './entities/base.entity';\nexport * from './models/data-provider.model';\n","import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\n\n@Injectable()\nexport class JwtDecodeMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    Logger.warn('Request...' + req);\n\n    next();\n  }\n}\n","import { HttpException, HttpStatus, Inject, Injectable, Optional, Scope } from '@nestjs/common';\nimport { ObjectId, OptionalId } from 'mongodb';\nimport { PinoLogger } from 'nestjs-pino';\nimport { DeepPartial, MongoRepository, ObjectID } from 'typeorm';\nimport { BcBaseEntity } from '../entities/base.entity';\nimport { Request } from 'express';\nimport * as R from 'remeda';\nimport { ObjectIdGuard, StringIdGuard } from '@util-lib';\nimport { IdType } from '@core-lib';\nimport { REQUEST } from '@nestjs/core';\nimport { SessionUserInterface } from './auth-user.model';\n\nexport type MsDocumentType<T> = OptionalId<T>;\n/**\n * Base class to extend for interacting with the database through a repository pattern.\n *\n * Add new standard database interaction methods here. Abstract away complex & nonstandard ones\n * @export\n * @class DataService\n * @template E - Model extends MsBaseEntity\n * @template R - repository extends MongoRepository<Model>\n */\n@Injectable()\nexport abstract class DataService<E extends BcBaseEntity<E>, R extends MongoRepository<E>> {\n  constructor(protected repository: R, private readonly logger: PinoLogger) {}\n\n  /**\n   * Create a repository item\n   *\n   * @param {E} dto\n   * @return {*}\n   * @memberof DataService\n   */\n  async create(dto: DeepPartial<E>): Promise<E> {\n    this.logger.info(`${this.constructor.name}.create props`, dto);\n\n    try {\n      const created = await this.repository.save({ ...dto });\n\n      this.logger.info(`${this.constructor.name}.create result`, created);\n\n      return R.clone(created);\n    } catch (error) {\n      this.logger.error(`${this.constructor.name}.create ${error}`);\n    }\n  }\n\n  /**\n   * Find a document by Id\n   *\n   * @param {string} id\n   * @return {*}\n   * @memberof DataService\n   */\n  async findOne(id: IdType): Promise<E> {\n    this.logger.info(`${this.constructor.name}findOne props`, id);\n    const _id = StringIdGuard(id);\n    try {\n      const document = await this.repository.findOne(_id);\n      this.logger.info('${this.constructor.name}findOne result', document);\n      return R.clone(document);\n    } catch (error) {\n      this.logger.error(`${this.constructor.name}.findOne ${error}`);\n    }\n  }\n\n  /**\n   * update a document by Id with deep  partial\n   *\n   * @param {string} id\n   * @param {Partial<E>} dto\n   * @return {*}\n   * @memberof DataService\n   */\n  async update(_id: ObjectId, dto: Partial<E>): Promise<Partial<E>> {\n    this.logger.info('update props', _id, dto);\n    try {\n      const update = await this.repository.findOneAndUpdate({ _id }, { $set: dto }, { returnOriginal: false });\n\n      this.logger.info('update result', update);\n\n      return R.clone(update.value);\n    } catch (error) {\n      this.logger.error(`${this.constructor.name}.update ${error}`);\n    }\n  }\n\n  /**\n   * Remove document by Id\n   *\n   * @param {string} id\n   * @return {*}\n   * @memberof DataService\n   */\n  async remove(id: IdType) {\n    try {\n      this.logger.info('remove props', id);\n      const removed = await this.repository.delete(ObjectIdGuard(id).toHexString());\n      return R.clone(removed);\n    } catch (error) {\n      this.logger.error(`${this.constructor.name}.remove ${error}`);\n    }\n  }\n\n  /**\n   * Findall documents in collection\n   *\n   * @return {*}\n   * @memberof DataService\n   */\n  async findAll(): Promise<E[]> {\n    this.logger.info(`${this.constructor.name}.findAll`);\n\n    try {\n      const findAll = await this.repository.find();\n      this.logger.info('findAll result', findAll);\n      return R.clone(findAll);\n    } catch (error) {\n      this.logger.error(`${this.constructor.name}.findAll ${error}`);\n      throw new HttpException('InternalServerErrorException', HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n  }\n\n  /**\n   * Find document by any partial query of the entity.\n   *\n   * @param {Partial<E>} query\n   * @return {*}\n   * @memberof DataService\n   */\n  async findByQuery(query: Partial<E>): Promise<E> {\n    this.logger.info(`${this.constructor.name}.findByQuery`);\n\n    try {\n      const findByQuery = await this.repository.findOne(query);\n\n      return R.clone(findByQuery);\n    } catch (error) {\n      this.logger.error(`${this.constructor.name}.findOne ${error}`);\n    }\n  }\n\n  async insertMany(items: DeepPartial<E>[]) {\n    this.logger.info(`${this.constructor.name}.insertMany`);\n    try {\n      const inserted = await this.repository.save(items);\n      this.logger.info(`${this.constructor.name}.insertMany result`, inserted);\n\n      return R.clone(inserted);\n    } catch (error) {\n      this.logger.error(`${this.constructor.name}.insertMany failed with: ${error}`);\n    }\n  }\n}\n","export * from './core';\n","import { Module } from '@nestjs/common';\nimport configuration, { appValidationSchema } from './configuration';\nimport { AppConfigService } from './app-config.provider';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport databaseConfiguration from './database.configuration';\n/**\n * Import and provide app configuration related classes.\n *\n * @module\n */\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: 'development.env',\n      load: [configuration, databaseConfiguration],\n      validationSchema: appValidationSchema,\n      cache: true,\n      ignoreEnvFile: process.env.NODE_ENV === 'production',\n      ignoreEnvVars: process.env.NODE_ENV !== 'production',\n    }),\n  ],\n  providers: [ConfigService, AppConfigService],\n  exports: [ConfigService, AppConfigService],\n})\nexport class AppConfigModule {}\n","import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport configuration from './configuration';\nimport databaseConfiguration from './database.configuration';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface AppConfigService extends ReturnType<typeof configuration> {}\n/**\n * Service dealing with app config based operations.\n *\n * @class\n */\n@Injectable()\nexport class AppConfigService {\n  constructor(private configService: ConfigService) {}\n\n  get(key: keyof AppConfigService) {\n    return this.configService.get('app.' + key);\n  }\n\n  db(key: keyof ReturnType<typeof databaseConfiguration>) {\n    return this.configService.get('db.' + key);\n  }\n\n  get isDev() {\n    return this.env === 'development';\n  }\n}\n","import { registerAs } from '@nestjs/config';\nimport * as Joi from 'joi';\n\n// console.log(process.env.NODE_ENV);\n\nexport const appValidationSchema = Joi.object({\n  APP_NAME: Joi.string().default('MediashareApi'),\n  APP_ENV: Joi.string().valid('development', 'production', 'test', 'provision').default('development'),\n  NODE_ENV: Joi.string().valid('development', 'production', 'test', 'provision').default('development'),\n  APP_PORT: Joi.number().default(3333),\n  APP_PREFIX: Joi.string().default('api'),\n  APP_TITLE: Joi.string().default('Mediashare'),\n  DB_URL: Joi.string().default('mongodb://localhost:27017/'),\n  SESSION_DB_NAME: Joi.string().default('api-session'),\n  SESSION_DB_COLLECTION: Joi.string().default('session'),\n  SESSION_SECRET: Joi.string().default('this-is-my-secret-key'),\n  APP_HOST: Joi.string().default('localhost'),\n  DB_TYPE: Joi.string().default('mongodb'),\n  DB: Joi.string().default('mediashare'),\n  DB_SSL: Joi.boolean().default(false),\n  DB_SYNCHRONIZE: Joi.boolean().default(false),\n  entities: [__dirname + '/**/*.entity{.ts,.js}'],\n  DB_USERNAME: Joi.string().default('mongodb'),\n  DB_PASSWORD: Joi.string().default(''),\n  AUTH_PORT: Joi.number().default(4000),\n  AUTH_HOST: Joi.string().default('localhost'),\n});\n\nexport default registerAs('app', () => ({\n  host: process.env.APP_HOST,\n  env: process.env.NODE_ENV,\n  name: process.env.APP_NAME,\n  port: process.env.APP_PORT,\n  globalPrefix: process.env.APP_PREFIX,\n  title: process.env.APP_TITLE,\n  sessionDb: process.env.DB_URL,\n  sessionDbName: process.env.SESSION_DB_NAME,\n  sessionSecret: process.env.SESSION_SECRET,\n  sessionCollection: process.env.SESSION_DB_COLLECTION,\n  authPort: process.env.AUTH_PORT,\n  authHost: process.env.AUTH_HOST,\n}));\n","const RouteTokens = {\n  USER_ID: ':userId',\n  SHARE_ID: ':shareId',\n  MEDIA_ITEM_ID: ':mediaId',\n} as const;\n\nexport default RouteTokens;\n","import { registerAs } from '@nestjs/config';\n\nexport default registerAs('db', () => ({\n  entities: [__dirname + '/**/*.entity{.ts,.js}'],\n  synchronize: process.env.NODE_ENV !== 'production',\n  useUnifiedTopology: true,\n  useNewUrlParser: true,\n  url: process.env.DB_URL,\n  type: process.env.DB_TYPE,\n  database: process.env.DB,\n  ssl: process.env.DB_SSL === 'true',\n  username: process.env.DB_USERNAME,\n  password: process.env.DB_PASSWORD,\n}));\n","import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { MediaItem } from '../../controllers/media-item/entities/media-item.entity';\nimport { MediaItemService } from '../../controllers/media-item/media-item.service';\nimport { Playlist } from '../../controllers/playlist/entities/playlist.entity';\nimport { User } from '../../controllers/user/entities/user.entity';\nimport { AppConfigModule } from '../app-config.module.ts/app-config.module';\nimport { AppConfigService } from '../app-config.module.ts/app-config.provider';\nimport { PlaylistItem } from '../playlist-item/entities/playlist-item.entity';\nimport { ShareItemModule } from '../share-item/share-item.module';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt.strategy';\nimport { LocalStrategy } from './local.strategy';\nimport { SessionSerializer } from './session.serializer';\nimport { UserService } from './user.service';\nimport { JwtModule, JwtService } from '@nestjs/jwt';\n\n@Module({\n  imports: [\n    AppConfigModule,\n    ClientsModule.registerAsync([\n      {\n        imports: [AppConfigModule],\n        name: 'AUTH_CLIENT',\n\n        useFactory: (configService: AppConfigService) => ({\n          transport: Transport.TCP,\n          options: {\n            host: configService.get('authHost'),\n            port: configService.get('authPort')\n          }\n        }),\n        inject: [AppConfigService]\n      }\n    ]),\n    TypeOrmModule.forFeature([User, Playlist, PlaylistItem, MediaItem]),\n    ShareItemModule,\n    JwtModule.register({\n      secret: process.env.SESSION_SECRET || 'this-is-my-secret-key',\n      signOptions: { expiresIn: '10h' }\n    })\n  ],\n  controllers: [],\n  providers: [LocalStrategy, SessionSerializer, JwtStrategy, AuthService, UserService],\n  exports: [ClientsModule, SessionSerializer, LocalStrategy, AuthService, UserService]\n})\nexport class AuthModule {}\n","import { Injectable, Logger } from '@nestjs/common';\n\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(private readonly jwtService: JwtService) {\n    // super(userRepository, logger);\n  }\n\n  sign(user, _id) {\n    const payload = { user, sub: _id };\n    const { password, ...userFields } = user;\n\n    return {\n      ...userFields,\n      accessToken: this.jwtService.sign(payload)\n    };\n  }\n\n  validateToken(jwt: string) {\n    const jwtResult = this.jwtService.verify(jwt);\n    const {\n      user: { username = null, _id = null }\n    } = jwtResult;\n\n    const hasUser = !!jwtResult;\n\n    return hasUser ? { username, _id } : null;\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context) {\n    return super.canActivate(context);\n    // console.log(can);\n    //\n    // return can;\n  }\n}\n","import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalGuard extends AuthGuard('local') {\n  async canActivate(context: ExecutionContext) {\n    const result = (await super.canActivate(context)) as boolean;\n    const request = context.switchToHttp().getRequest();\n    console.log('🚀 ---------------------------------------------------------------------------------');\n    console.log('🚀 ~ file: local.guard.ts ~ line 11 ~ LocalGuard ~ canActivate ~ request', request);\n    console.log('🚀 ---------------------------------------------------------------------------------');\n    const loggedIn = await super.logIn(request);\n\n    console.log(loggedIn);\n    return result;\n  }\n}\n","import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: 'this-is-my-secret-key',\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n","import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UserService } from './user.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly userService: UserService) {\n    super();\n  }\n\n  async validate(username: string, password: string) {\n    const user = await this.userService.loginUser({ username, password });\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n","import { PassportSerializer } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n@Injectable()\nexport class SessionSerializer extends PassportSerializer {\n  serializeUser(user: any, done: (err: Error, user: any) => void): any {\n    done(null, user);\n  }\n  deserializeUser(payload: any, done: (err: Error, payload: string) => void): any {\n    done(null, payload);\n  }\n}\n","import { Inject, Injectable, RequestTimeoutException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { MongoRepository } from 'typeorm';\nimport { PinoLogger, Logger } from 'nestjs-pino';\nimport { DataService } from '@api';\nimport { ClientProxy } from '@nestjs/microservices';\n\nimport { User } from '../../controllers/user/entities/user.entity';\nimport { ObjectId } from 'mongodb';\nimport { BcRolesType } from 'libs/core/src/lib/models/roles.enum';\nimport { CreateUserDto } from '../../controllers/user/dto/create-user.dto';\nimport { compareSync } from 'bcrypt';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class UserService extends DataService<User, MongoRepository<User>> {\n  constructor(\n    @InjectRepository(User)\n    repository: MongoRepository<User>,\n    logger: PinoLogger,\n    @Inject('AUTH_CLIENT')\n    private readonly client: ClientProxy,\n    private authSvc: AuthService\n  ) {\n    super(repository, logger);\n  }\n\n  async checkIfUserExists(username: string) {\n    const user = await this.findByQuery({ username });\n\n    return !!user;\n  }\n\n  async loginUser(login: { username: string; password: string }) {\n    const { username, password } = login;\n    const user = await this.validateUser({ username, password });\n\n    if (!user) return null;\n\n    return await this.login(user, user._id);\n  }\n\n  async validateUser({ username, password }: { username: string; password: string }) {\n    const user = await this.findByQuery({ username });\n\n    if (user?.password === password) return user;\n    if (compareSync(password, user?.password)) {\n      return user;\n    }\n\n    return null;\n  }\n\n  async validateToken({ token, _id }: { token: string; _id: string }) {\n    return this.authSvc.validateToken(token);\n  }\n\n  setRoles(_id: string, roles: BcRolesType[]) {\n    return this.client.send({ role: 'auth', cmd: 'setRoles' }, { _id, roles }).toPromise();\n  }\n\n  getAuthUser(user: { _id: ObjectId }) {\n    return this.client.send({ role: 'auth', cmd: 'get' }, user).toPromise();\n  }\n\n  async createUser(user: CreateUserDto): Promise<User> {\n    const userEntity = await this.create(user);\n\n    return userEntity;\n  }\n\n  async login(user, _id) {\n    const payload = { user, sub: _id };\n    const { password, ...userFields } = user;\n\n    return {\n      ...userFields,\n      accessToken: this.authSvc.sign(payload, _id)\n    };\n  }\n}\n","import { BcBaseEntity } from '@api';\nimport { ApiObjectId } from '@mediashare/shared';\nimport { ObjectId } from 'mongodb';\nimport { Column, Entity, Index } from 'typeorm';\n\n@Entity()\nexport class PlaylistItem extends BcBaseEntity<PlaylistItem> {\n  @Column()\n  @ApiObjectId()\n  @Index('mediaId')\n  mediaId: ObjectId;\n\n  @Column()\n  @ApiObjectId()\n  @Index('userId', { unique: false })\n  userId: ObjectId;\n\n  @Column()\n  @Index('playlistId', { unique: false })\n  playlistId: ObjectId;\n\n  @Column()\n  sortIndex: number;\n}\n","import { ObjectId } from 'mongodb';\n\nfunction mapPlaylistItems(ids: Readonly<string[]>, params: { userId: ObjectId; playlistId: ObjectId }) {\n  const { userId, playlistId } = params;\n\n  return ids.map((id) => ({\n    userId,\n    mediaId: new ObjectId(id),\n    playlistId,\n  }));\n}\n\nexport { mapPlaylistItems };\n","import { DataService } from '@api';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PinoLogger } from 'nestjs-pino';\nimport { MongoRepository } from 'typeorm';\nimport { PlaylistItem } from '../entities/playlist-item.entity';\nimport { ObjectIdParameters } from '@mediashare/shared';\n\n@Injectable()\nexport class PlaylistItemService extends DataService<PlaylistItem, MongoRepository<PlaylistItem>> {\n  private get playlistAggregationPipeline() {\n    return [\n      {\n        $lookup: {\n          from: 'media_item',\n          localField: 'mediaId',\n          foreignField: '_id',\n          as: 'mediaItems',\n        },\n      },\n      {\n        $unwind: {\n          path: '$mediaItems',\n          preserveNullAndEmptyArrays: false,\n        },\n      },\n      {\n        $replaceRoot: {\n          newRoot: {\n            $mergeObjects: [{ playlistItemId: '$_id', mediaId: '$mediaId', playlistId: '$playlistId', userId: 0 }, '$mediaItems'],\n          },\n        },\n      },\n      {\n        $lookup: {\n          from: 'playlist',\n          localField: 'playlistId',\n          foreignField: '_id',\n          as: 'playlist',\n        },\n      },\n      {\n        $unwind: {\n          path: '$playlist',\n          preserveNullAndEmptyArrays: false,\n        },\n      },\n      {\n        $replaceRoot: {\n          newRoot: {\n            _id: '$mediaId',\n            playlistId: '$playlistId',\n            userId: '$userId',\n            playlistItemId: '$playlistItemId',\n            summary: '$summary',\n            isPlayable: '$isPlayable',\n            description: '$description',\n            category: '$category',\n            title: '$title',\n            playlistTitle: '$playlist.title',\n          },\n        },\n      },\n      {\n        $group: { _id: '$playlistId', title: { $first: '$playlistTitle' }, mediaItems: { $push: '$$ROOT' } },\n      },\n    ];\n  }\n  constructor(\n    @InjectRepository(PlaylistItem)\n    public repository: MongoRepository<PlaylistItem>,\n    logger: PinoLogger\n  ) {\n    super(repository, logger);\n  }\n\n  aggregatePlaylistAndItemByIdField(params: Partial<ObjectIdParameters>) {\n    return this.repository\n      .aggregate([\n        {\n          $match: { ...params },\n        },\n        {\n          $lookup: {\n            from: 'playlist',\n            localField: 'playlistId',\n            foreignField: '_id',\n            as: 'playlist',\n          },\n        },\n        {\n          $unwind: { path: '$playlist' },\n        },\n\n        {\n          $lookup: {\n            from: 'media_item',\n            localField: 'mediaId',\n            foreignField: '_id',\n            as: 'mediaItems',\n          },\n        },\n        {\n          $lookup: {\n            from: 'user',\n            localField: 'userId',\n            foreignField: '_id',\n            as: 'user',\n          },\n        },\n        { $unwind: { path: '$mediaItems' } },\n        { $unwind: { path: '$user' } },\n        {\n          $group: {\n            _id: '$playlist._id',\n            title: { $first: '$playlist.title' },\n            userId: { $first: '$playlist.userId' },\n            mediaItems: {\n              $push: { $mergeObjects: ['$mediaItems', { playlistItemId: '$_id' }] },\n            },\n          },\n        },\n      ])\n      .toArray();\n  }\n\n  aggregatePlaylistAndItem() {\n    return this.repository.find();\n  }\n}\n","import { BcEntity } from '@api';\nimport { ApiObjectId, ApiString } from '@mediashare/shared';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean, isNotEmpty } from 'class-validator';\nimport { ObjectId } from 'mongodb';\nimport { Column, Entity, Index, Check } from 'typeorm';\n\n@Entity()\nexport class ShareItem extends BcEntity {\n  @Column({ name: 'userId' })\n  @ApiObjectId({ readOnly: true })\n  @Index('userId', { unique: false })\n  userId: ObjectId;\n\n  @Column('playlistId')\n  @ApiObjectId({ required: false })\n  @Index('playlistId', { unique: false })\n  playlistId: ObjectId;\n\n  @Column({ name: 'mediaId', unique: false })\n  @ApiObjectId({ required: false })\n  @Index('mediaId')\n  mediaId: ObjectId;\n\n  @Column({ name: 'read', unique: false })\n  @IsBoolean()\n  read: boolean;\n\n  @Column({ name: 'title', unique: false })\n  @ApiString()\n  title: string;\n}\n","import { DataService } from '@api';\nimport { ObjectIdParameters, OptionalObjectIdParameters } from '@mediashare/shared';\nimport { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ObjectId } from 'mongodb';\nimport { PinoLogger } from 'nestjs-pino';\nimport { MongoRepository } from 'typeorm';\nimport { CreateMediaShareItemInput, CreatePlaylistShareItemDto } from '../dto/create-share-item.dto';\n\nimport { ShareItem } from '../entities/share-item.entity';\n\nexport class QueryBuilder {\n  match({ userId }: OptionalObjectIdParameters) {\n    return { $match: { $and: [{ userId }, { mediaId: { $exists: true } }] } };\n  }\n}\n\n@Injectable()\nexport class ShareItemService extends DataService<ShareItem, MongoRepository<ShareItem>> {\n  constructor(\n    @InjectRepository(ShareItem)\n    repository: MongoRepository<ShareItem>,\n    logger: PinoLogger\n  ) {\n    super(repository, logger);\n  }\n\n  findShareItemsByUserId(userId: ObjectId) {\n    return [this.aggregateSharedMediaItems({ userId }), this.aggregateSharedPlaylists({ userId })];\n  }\n\n  aggregateSharedPlaylistItems({ userId }: { userId: ObjectId }) {\n    const query = this.repository.aggregate([\n      {\n        $match: { where: { userId, playlistId: { $exists: true } } },\n      },\n      {\n        $lookup: { from: 'playlist_item', localField: 'playlistId', foreignField: 'playlistId', as: 'playlistItems' },\n      },\n    ]);\n    return query.toArray();\n  }\n\n  aggregateSharedMediaItems({ userId }: { userId: ObjectId }) {\n    const query = this.repository.aggregate([\n      { $match: { $and: [{ userId: userId }, { mediaId: { $exists: true } }] } },\n\n      { $lookup: { from: 'media_item', localField: 'mediaId', foreignField: '_id', as: 'mediaItem' } },\n\n      { $unwind: { path: '$mediaItem' } },\n\n      {\n        $lookup: {\n          from: 'user',\n          localField: 'createdBy',\n          foreignField: '_id',\n          as: 'createdBy',\n        },\n      },\n      { $unwind: { path: '$createdBy' } },\n      {\n        $replaceRoot: {\n          newRoot: {\n            $mergeObjects: [{ userId: 0, playlistId: 0, mediaId: 0 }, '$mediaItem', { createdBy: '$createdBy' }],\n          },\n        },\n      },\n    ]);\n\n    return query.toArray();\n  }\n\n  aggregateSharedPlaylists({ userId }: OptionalObjectIdParameters) {\n    return this.repository\n      .aggregate([\n        { $match: { $and: [{ userId }, { playlistId: { $exists: true } }] } },\n        { $lookup: { from: 'user', localField: 'userId', foreignField: '_id', as: 'createdByUser' } },\n\n        {\n          $lookup: {\n            from: 'playlist_item',\n            localField: 'playlistId',\n            foreignField: 'playlistId',\n            as: 'playlistItems',\n          },\n        },\n        { $unwind: '$playlistItems' },\n        { $unwind: '$createdByUser' },\n        {\n          $replaceRoot: {\n            newRoot: {\n              $mergeObjects: [\n                { shareItem: { _id: '$_id', createdBy: '$createdByUser', userId: '$userId' } },\n                '$playlistItems',\n              ],\n            },\n          },\n        },\n        { $lookup: { from: 'media_item', localField: 'mediaId', foreignField: '_id', as: 'mediaItems' } },\n        { $unwind: '$mediaItems' },\n        { $unwind: '$shareItem' },\n        { $lookup: { from: 'playlist', localField: 'playlistId', foreignField: '_id', as: 'playlist' } },\n        { $unwind: '$playlist' },\n        {\n          $group: {\n            _id: '$playlistId',\n            shareId: { $first: '$shareItem._id' },\n            title: { $first: '$playlist.title' },\n            category: { $first: '$playlist.category' },\n            createdBy: { $first: '$shareItem.createdBy' },\n            mediaItems: { $push: { $mergeObjects: ['$mediaItems', { playlistItemId: 'playlistItem._id' }] } },\n          },\n        },\n      ])\n      .toArray();\n  }\n\n  getCreatedByUser(userId: ObjectId) {\n    return this.repository\n      .aggregate([\n        {\n          $lookup: {\n            from: 'user',\n            localField: 'createdBy',\n            foreignField: '_id',\n            as: 'createdBy',\n          },\n        },\n        { $unwind: { path: '$createdBy' } },\n      ])\n      .toArray();\n  }\n\n  /**\n   * Create a new share media item. This inserts a record into the mongo database in the shape of the share item.\n   *\n   * @param {CreateMediaShareItemInput} params\n   * @return {ShareItem}\n   * @memberof ShareItemService\n   */\n  async createMediaShareItem(params: CreateMediaShareItemInput) {\n    const { userId: userIdStr, mediaId: mediaIdStr, createdBy: createdByStr, title } = params;\n    const item = await this.create({\n      userId: new ObjectId(userIdStr),\n      mediaId: new ObjectId(mediaIdStr),\n      createdBy: new ObjectId(createdByStr),\n      title,\n      read: false,\n    });\n\n    return item;\n  }\n\n  createPlaylistShareItem({ userId, playlistId, createdBy }: CreatePlaylistShareItemDto): Promise<ShareItem> {\n    return this.create({\n      userId,\n      playlistId,\n      createdBy,\n      read: false,\n    });\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ShareItem } from './entities/share-item.entity';\nimport { ShareItemService } from './services/share-item.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ShareItem])],\n  providers: [ShareItemService],\n  exports: [ShareItemService],\n})\nexport class ShareItemModule {}\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { ValidationPipe } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport { Logger } from 'nestjs-pino';\nimport { AppModule } from './app/app.module';\n\nimport { writeFileSync } from 'fs';\n\nimport * as passport from 'passport';\nimport { AppConfigService } from './app/modules/app-config.module.ts/app-config.provider';\nimport { DocumentBuilderFactory } from '@mediashare/shared';\nimport * as session from 'express-session';\nimport MongoStore from 'connect-mongo';\nimport * as compression from 'compression';\n\nconst port = process.env.PORT || 3456;\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  const appConfig: AppConfigService = app.get('AppConfigService');\n\n  app.useLogger(app.get(Logger));\n\n  app.useGlobalPipes(new ValidationPipe());\n\n  const [host, globalPrefix, title, mongoUrl, dbName, collectionName, secret, isDev] = [\n    appConfig.get('host'),\n    appConfig.get('globalPrefix'),\n    appConfig.get('title'),\n    appConfig.get('sessionDb'),\n    appConfig.get('sessionDbName'),\n    appConfig.get('sessionCollection'),\n    appConfig.get('sessionSecret'),\n    appConfig.get('env') === 'development'\n  ] as const;\n\n  app.setGlobalPrefix(globalPrefix);\n\n  /* PASSPORT & SESSION */\n\n  /* SWAGGER */\n  const config = new DocumentBuilder()\n    .setTitle(title)\n    .setDescription('Media Share API')\n    .setVersion('1.0')\n    .addServer(isDev ? `http://localhost:${port}` : `https://bcdevmediashare.herokuapp.com`, 'development server')\n    .addBearerAuth()\n    .build();\n\n  const document = SwaggerModule.createDocument(app, config);\n\n  SwaggerModule.setup(globalPrefix, app, document, { explorer: isDev });\n\n  app.use(passport.initialize());\n  app.use(passport.session());\n  app.use(compression());\n\n  app.use(\n    session({\n      store: MongoStore.create({\n        mongoUrl,\n        dbName,\n        collectionName\n      }),\n\n      secret,\n      resave: false\n    })\n  );\n\n  console.log('is dev? ', isDev);\n  if (isDev) {\n    console.log('writing swagger definitions');\n    writeFileSync('./swagger-spec.json', JSON.stringify(document, null, 2));\n  }\n\n  await app.listen(port, () => {\n    console.log(`Listening at ${host}:${port}/${globalPrefix}`);\n  });\n}\n\nbootstrap();\n","export * from './lib/core';\n\nexport * from './lib/models/account.model';\nexport * from './lib/models/feed.model';\nexport * from './lib/models/profile.model';\nexport * from './lib/models/stats.model';\nexport * from './lib/models/tag.model';\n\nexport * from './lib/models/api-defaults.model';\n\nexport * from './lib/tokens/auth-tokens.constant';\n\nexport * from './lib/models';\n\nexport * from './lib/tokens';\nexport * from './lib/types/';\n","export function core(): string {\n  return 'core';\n}\n","export class Model<T> {\n  constructor(model?: Partial<T>) {\n    if (model) Object.assign(this, model);\n  }\n}\n","import { ConfigEnum } from '../types/configEnum.type';\n\nexport const ACCOUNT_TYPES = [\n  'Email',\n  'Google',\n  'Facebook',\n  'Instagram',\n] as const;\nexport type AccountType = ConfigEnum<typeof ACCOUNT_TYPES>;\n\nexport interface Account {\n  id?: string;\n  accountType?: AccountType;\n  uid: string;\n  // TODO: Other stuff here...\n}\n","export class ApiDefaults {\n  static get nameString() {\n    return {\n      min: 2,\n      max: 50,\n    };\n  }\n\n  static get string() {\n    return {\n      min: 2,\n      max: 100,\n    };\n  }\n\n  static get longString() {\n    return {\n      min: 10,\n      max: 255,\n    };\n  }\n}\n","import { ConfigEnum } from '../types/configEnum.type';\n\nconst PLAYLIST_CATEGORY = ['rehab', 'builder', 'warmup'] as const;\n\nexport type PlaylistCategoryType = ConfigEnum<typeof PLAYLIST_CATEGORY>;\nconst [rehab, builder, warmup] = PLAYLIST_CATEGORY;\n\nconst MEDIA_CATEGORY = ['strength', 'flexibility', 'endurance'] as const;\n\nexport type MediaCategoryType = ConfigEnum<typeof MEDIA_CATEGORY>;\n\nconst [strength, flexibility, endurance] = MEDIA_CATEGORY;\n\nconst playlistCategories = { rehab, builder, warmup };\n\nconst mediaCategories = { strength, flexibility, endurance };\n\nexport { playlistCategories, mediaCategories, MEDIA_CATEGORY, PLAYLIST_CATEGORY };\n","// TODO: We'll do feeds later!\n//  Not sure how it works now that we are storing our media...\nexport interface Feed {\n  id?: string;\n  displayName?: string; // Friendly name\n  type?: string; // This is the internal name\n}\n\n/* Use users/id/shared to get the shared items */\n","export * from './playlistItem.interface';\nexport * from './bc-base.interface';\nexport * from './auth-user.interface';\nexport * from './categories.model';\nexport * from './validators';\nexport * from './feed.model';\nexport * from './profile.model';\nexport * from './api-defaults.model';\nexport * from './account.model';\nexport * from './tag.model';\nexport * from './user.interface';\nexport * from './stats.model';\nexport * from './roles.enum';\nexport * from './roles.model';\nexport * from './abstract/orderable.model';\nexport * from './abstract/metadata.model';\nexport * from './abstract/media.interface';\nexport * from './abstract/model';\nexport * from './playlist.interface';\n","import { ConfigEnum } from '../types/configEnum.type';\n\nconst BC_ROLES = ['guest', 'user', 'admin'] as const;\n\nexport type BcRolesType = ConfigEnum<typeof BC_ROLES>;\nconst [guest, user, admin] = BC_ROLES;\n\nconst bcRoles = { guest, user, admin } as const;\n\nexport { bcRoles, BC_ROLES };\n","const roleTypes = ['user', 'subscribed', 'admin'] as const;\nexport interface Roles {}\n\nexport class Roles {}\n","import { registerDecorator, ValidationOptions, ValidationArguments, minLength, maxLength } from 'class-validator';\nimport * as R from 'remeda';\n\ntype Gconstructor<T = {}> = new (...args: any[]) => T;\n\ntype BaseConstructor = Gconstructor;\n\nconst nameString = {\n  min: 2,\n  max: 50,\n};\n\nconst VALIDATORS = [nameString.constructor.name, 'longString', 'shortString'] as const;\n\n// type ValidatorsKeyType = typeof VALIDATORS[number];\n\n// const makeValidator = (key: ValidatorsKeyType) => ({ key });\n\n// function minValidatorMixin<TBase extends BaseConstructor>(Base: TBase) {\n//   return class {\n//     constructor ( private length: number ) {\n\n//     }\n//   };\n// }\n\n// const shortStringMin = makeValidator('string');\n\n// // const nameString: readonly [ number, number ] = [ 2, 50 ] as const;\n\n// const validators = [nameString] as const;\n\n// type ValidatorTypes = keyof typeof validators;\n\n// // function makeStringValidator(type: ValidatorTypes) {\n// //   const min = validators[type].min;\n// //   const max = validators[type].max;\n// //   return function (validationOptions?: ValidationOptions) {\n// //     // eslint-disable-next-line @typescript-eslint/ban-types\n// //     return function (object: Object, propertyName: string) {\n// //       registerDecorator({\n// //         name: 'isBcString',\n// //         target: object.constructor,\n// //         propertyName: propertyName,\n// //         options: validationOptions,\n// //         validator: {\n// //           validate(value: any, args: ValidationArguments) {\n// //             const isLongerThan = minLength(value, min);\n// //             const isShorterThan = maxLength(value, max);\n\n// //             return isLongerThan && isShorterThan;\n// //           },\n// //         },\n// //       });\n// //     };\n// //   };\n// // }\n\n// const validatorsArray = R.map(validators, (validator) => Object.create(validator));\n\n// export { validators };\n","const AUTH_CLIENT = 'AUTH_CLIENT';\n\nexport { AUTH_CLIENT };\n","const [PLAYLIST_ENTITY, MEDIA_ITEM_ENTITY] = ['playlist', 'media_item'] as const;\n\nexport { PLAYLIST_ENTITY, MEDIA_ITEM_ENTITY };\n","export * from './auth-tokens.constant';\nexport * from './path-segment-variable-tokens.constant';\nexport * from './entity-tokens.const';\n","const [PLAYLIST_ID] = ['playlistId'] as const;\n\nexport { PLAYLIST_ID };\n","export * from './constructor.type';\nexport * from './configEnum.type';\nexport * from './id.type';\n","export * from './lib';\n","import { applyDecorators } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { ArrayNotEmpty, IsArray } from 'class-validator';\nimport { ObjectId } from 'mongodb';\nimport { ApiDecoratorOptions, apiDecoratorDefaults } from '../models';\nconst objectId = new ObjectId();\n\nconst ApiArray = function ({\n  required,\n  type,\n  example = ['item'],\n  readOnly,\n}: ApiDecoratorOptions = apiDecoratorDefaults) {\n  return applyDecorators(IsArray(), ApiProperty({ type: type, required, isArray: true, example, readOnly }));\n};\n\nconst ObjectIdArray = function ({ required }: ApiDecoratorOptions = apiDecoratorDefaults) {\n  return ApiArray({ required, type: ObjectId, example: [objectId] });\n};\n\nexport { ApiArray, ObjectIdArray };\n","import { applyDecorators } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsDateString } from 'class-validator';\nimport { apiDecoratorDefaults, ApiDecoratorOptions } from '../models';\n// const paramsType =   { required } =  apiDecoratorDefaults;\n\nexport const ApiPastDate = function ({ required, readOnly }: ApiDecoratorOptions = apiDecoratorDefaults) {\n  return applyDecorators(IsDateString(), ApiProperty({ type: Date, required, readOnly, default: new Date() }));\n};\n","import { applyDecorators, SetMetadata } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId } from 'class-validator';\nimport { ObjectId } from 'mongodb';\nimport { apiDecoratorDefaults, ApiDecoratorOptions } from '../models';\nconst example = new ObjectId().toHexString();\n\nconst ApiObjectId = function ({ required, readOnly = false, description }: ApiDecoratorOptions = apiDecoratorDefaults) {\n  return applyDecorators(IsMongoId(), ApiProperty({ type: String, required, example, readOnly, description }));\n};\n\nexport { ApiObjectId };\n","import { applyDecorators } from '@nestjs/common';\nimport { ApiResponse, ApiResponseMetadata } from '@nestjs/swagger';\n\ntype ApiControllerDecoratorOptions = Pick<ApiResponseMetadata, 'type' | 'status' | 'isArray' | 'description'>;\n\nexport type ApiControllerDecoratorParams = Partial<ApiControllerDecoratorOptions>;\n\nconst ApiGetResponse = function ({ type, isArray }: ApiControllerDecoratorParams = {}) {\n  return applyDecorators(ApiResponse({ type, status: 200, isArray }));\n};\n\nconst ApiPostResponse = function ({ type, isArray }: ApiControllerDecoratorParams = {}) {\n  return applyDecorators(ApiResponse({ type, status: 201, isArray }));\n};\n\nexport { ApiGetResponse, ApiPostResponse };\n","// @ApiProperty({ type: 'string' })\n\nimport { ApiDecoratorType } from '@mediashare/shared';\nimport { applyDecorators } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString, IsUrl, Length } from 'class-validator';\nimport { apiDecoratorDefaults } from '../models';\n\nimport * as R from 'remeda';\n\nconst baseStringValidators = (min, max) => [IsString(), Length(min, max)];\nconst lengthFn = function (minLength: number, maxLength: number) {\n  return { maxLength, minLength };\n};\n\nconst ApiEmail: ApiDecoratorType = function ({ required } = apiDecoratorDefaults) {\n  const length = [5, 50] as const;\n\n  return applyDecorators(\n    ApiProperty({ required, type: String, example: 'test@example.com', ...lengthFn(...length) }),\n    IsEmail()\n  );\n};\n\nconst ApiUsername: ApiDecoratorType = function ({ required } = apiDecoratorDefaults) {\n  return applyDecorators(ApiEmail({ required }));\n};\n\nconst ApiName: ApiDecoratorType = function ({ required } = apiDecoratorDefaults) {\n  const length = [3, 30] as const;\n\n  return applyDecorators(\n    ...baseStringValidators(...length),\n    ApiProperty({ required, type: String, example: 'Jose', ...lengthFn(...length) })\n  );\n};\n\nconst ApiString: ApiDecoratorType = function ({ required } = apiDecoratorDefaults) {\n  const length = [5, 255] as const;\n  return applyDecorators(\n    ...baseStringValidators(...length),\n    ApiProperty({\n      required,\n      type: String,\n      example: R.randomString(125),\n      ...lengthFn(...length),\n    })\n  );\n};\n\nconst ApiUriString: ApiDecoratorType = function ({ required } = apiDecoratorDefaults) {\n  const [min, max] = [5, 255] as const;\n  return applyDecorators(\n    IsUrl(),\n    ApiProperty({\n      required,\n      type: String,\n      example: 'http://ihila.sh/ruabcos',\n      maxLength: max,\n      minLength: min,\n    })\n  );\n};\n\nconst ApiLongString: ApiDecoratorType = function ({ required } = apiDecoratorDefaults) {\n  return applyDecorators(\n    ...baseStringValidators(5, 700),\n    ApiProperty({ required, type: String, example: R.randomString(300) })\n  );\n};\n\nexport { ApiEmail, ApiUsername, ApiName, ApiString, ApiUriString, ApiLongString };\n","export * from './api-response.decorator';\nexport * from './api-date.decorator';\nexport * from './api-object-id.decorator';\nexport * from './api-string.decorator';\nexport * from './api-array.decorator';\n","import { DocumentBuilder } from '@nestjs/swagger';\n\ninterface DocumentBuilderFactory {\n  title: string;\n}\n\nconst DocumentBuilderFactory = function ({ title }: DocumentBuilderFactory) {\n  return new DocumentBuilder()\n    .setTitle(title)\n    .setDescription('Media Share API')\n    .setVersion('1.0')\n    .addServer('http://localhost:3333', 'development server')\n    .addBearerAuth();\n};\n\nexport { DocumentBuilderFactory };\n","export * from './session-store.factory';\nexport * from './document-builder.factory';\n","import { Logger } from '@nestjs/common';\nimport * as MongoStore from 'connect-mongo';\nimport * as session from 'express-session';\n\ninterface SessionStoreFactory {\n  mongoUrl: string;\n  dbName: string;\n  collectionName: string;\n  secret: string;\n}\n\nconst SessionStoreFactory = function ({ mongoUrl, dbName, collectionName, secret }: SessionStoreFactory) {\n  if (!mongoUrl || !dbName || !collectionName || !secret) Logger.error('invalid arguments in SessionStoreFactory');\n\n  const store = MongoStore.default.create({ mongoUrl, dbName, collectionName });\n\n  const [resave, saveUninitialized] = [false, false];\n\n  return () =>\n    session({\n      store,\n      secret,\n      resave,\n      saveUninitialized,\n    });\n};\n\nexport { SessionStoreFactory };\n","export * from './factories';\nexport * from './pipes';\nexport * from './models';\nexport * from './decorators';\nexport * from './interceptors';\n","import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\n\n@Injectable()\nexport class CreatedBy implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): any {\n    const ctx = context.switchToHttp().getRequest();\n    const { _id } = ctx.session?.passport?.user ?? null;\n    ctx.body = { ...ctx.body, createdBy: _id };\n\n    return next.handle();\n  }\n}\n","export * from './created-by.interceptor';\n","const apiDecoratorDefaults = {\n  required: true,\n} as const;\n\nexport { apiDecoratorDefaults };\n","import { ObjectId } from 'mongodb';\n\nclass ObjectIdParameters {\n  userId: ObjectId;\n  playlistId: ObjectId;\n  mediaId: ObjectId;\n  playlistItemId: ObjectId;\n}\n\nexport type OptionalObjectIdParameters = Partial<ObjectIdParameters>;\n\nexport { ObjectIdParameters };\n","function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport type UuidType = ReturnType<typeof uuidv4>;\n","export * from './api-parameters.model';\nexport * from './api-response.model';\nexport * from './api-decorator.model';\nexport * from './api-uuid.model';\nexport * from './api-decorator-defaults.model';\nexport * from './api-decorator-options.interface';\n","export * from './object-id.pipe';\n","import { PipeTransform, Injectable, ArgumentMetadata } from '@nestjs/common';\nimport { ObjectId } from 'mongodb';\n\n@Injectable()\nexport class ObjectIdPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    return typeof value === 'string' ? new ObjectId(value) : value;\n  }\n}\n\n@Injectable()\nexport class ObjectIdToStringPipe implements PipeTransform {\n  transform(value: any, metadata: ArgumentMetadata) {\n    return typeof value !== 'string' ? value.toHexString() : value;\n  }\n}\n","import { ObjectID, ObjectId } from 'mongodb';\nimport { IdType } from '../types';\nconst ObjectIdGuard = function (value: IdType): ObjectID {\n  return typeof value === 'string' ? new ObjectID(value) : value;\n};\n\nconst StringIdGuard = function (value: IdType): string {\n  return typeof value === 'string' ? value : value.toHexString();\n};\n\nexport { ObjectIdGuard, StringIdGuard };\n","export const promiseWrapperFunctor = <E extends Object>(object: E) => {\n  return () => new Promise<E>((resolve) => resolve(object));\n};\n","export * from './utility.module';\nexport * from './utility.service';\n\nexport * from './models/primitive-keys.model';\n\nexport * from './types/type-names.type';\n\nexport * from './functors/promise-wrapper.functor';\n\nexport * from './functors/object-id.guard';\n\nexport * from './types/';\n","const PRIMITIVE_KEY_VALUES = ['string', 'number', 'boolean'] as const;\nexport const [STRING, NUMBER, BOOLEAN] = PRIMITIVE_KEY_VALUES;\n\nexport type PrimitiveKeyType = typeof PRIMITIVE_KEY_VALUES[number];\n\nconst isString = (key: PrimitiveKeyType) => key === 'string';\n\nconst isBoolean = (key: PrimitiveKeyType) => key === 'boolean';\n\nconst isNumber = (key: PrimitiveKeyType) => key === 'number';\n\nexport { isString, isBoolean, isNumber };\n","export * from './id.type';\nexport * from './type-names.type';\n","import { Module } from '@nestjs/common';\nimport { UtilityService } from './utility.service';\n\n@Module({\n  providers: [UtilityService],\n  exports: [UtilityService],\n})\nexport class UtilityModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UtilityService {}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/microservices\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"bcrypt\");","module.exports = require(\"bson\");","module.exports = require(\"class-validator\");","module.exports = require(\"compression\");","module.exports = require(\"connect-mongo\");","module.exports = require(\"express\");","module.exports = require(\"express-session\");","module.exports = require(\"fs\");","module.exports = require(\"joi\");","module.exports = require(\"mongodb\");","module.exports = require(\"nestjs-pino\");","module.exports = require(\"passport\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"remeda\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}