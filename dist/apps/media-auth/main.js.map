{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/media-auth/src/app/app.module.ts","webpack:///./apps/media-auth/src/app/auth/auth-user.entity.ts","webpack:///./apps/media-auth/src/app/auth/auth.controller.ts","webpack:///./apps/media-auth/src/app/auth/auth.module.ts","webpack:///./apps/media-auth/src/app/auth/auth.service.ts","webpack:///./apps/media-auth/src/app/configuration.ts","webpack:///./apps/media-auth/src/main.ts","webpack:///./libs/core/src/index.ts","webpack:///./libs/core/src/lib/core.ts","webpack:///./libs/core/src/lib/models/abstract/model.ts","webpack:///./libs/core/src/lib/models/account.model.ts","webpack:///./libs/core/src/lib/models/api-defaults.model.ts","webpack:///./libs/core/src/lib/models/categories.model.ts","webpack:///./libs/core/src/lib/models/feed.model.ts","webpack:///./libs/core/src/lib/models/index.ts","webpack:///./libs/core/src/lib/models/roles.enum.ts","webpack:///./libs/core/src/lib/models/roles.model.ts","webpack:///./libs/core/src/lib/models/validators.ts","webpack:///./libs/core/src/lib/tokens/auth-tokens.constant.ts","webpack:///./libs/core/src/lib/tokens/entity-tokens.const.ts","webpack:///./libs/core/src/lib/tokens/index.ts","webpack:///./libs/core/src/lib/tokens/path-segment-variable-tokens.constant.ts","webpack:///./libs/core/src/lib/types/index.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/config\"","webpack:///external \"@nestjs/core\"","webpack:///external \"@nestjs/jwt\"","webpack:///external \"@nestjs/microservices\"","webpack:///external \"@nestjs/typeorm\"","webpack:///external \"bcrypt\"","webpack:///external \"class-validator\"","webpack:///external \"tslib\"","webpack:///external \"typeorm\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthUser } from './auth/auth-user.entity';\n\nimport { AuthModule } from './auth/auth.module';\nimport configuration from './configuration';\nconst ormConfig = {\n  type: 'postgres' as const,\n  // url: 'postgres://msuser:msuserpass@postgres/msuser',\n  host: process.env.POSTGRES_HOST,\n  port: parseInt(process.env.POSTGRESS_PORT) || 5432,\n  username: process.env.POSTGRES_USERNAME || 'msuser',\n  password: process.env.POSTGRES_PASSWORD || 'msuserpass',\n  database: process.env.POSTGRES_DB || 'msuser',\n  synchronize: true,\n  ssl: false,\n  entities: [AuthUser],\n  connectTimeoutMS: 2000,\n  logNotifications: true,\n};\n\nconsole.log(ormConfig);\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [configuration],\n      envFilePath: 'development.env',\n      ignoreEnvVars: process.env.NODE_ENV === 'development',\n      ignoreEnvFile: process.env.NODE_ENV !== 'development',\n    }),\n\n    TypeOrmModule.forRoot(ormConfig),\n    AuthModule,\n  ],\n  controllers: [],\n  providers: [ConfigService],\n})\nexport class AppModule {}\n","import { hash } from 'bcrypt';\nimport { Min, IsEmail } from 'class-validator';\nimport {\n  Entity,\n  Unique,\n  UpdateDateColumn,\n  PrimaryGeneratedColumn,\n  Column,\n  CreateDateColumn,\n  BeforeInsert,\n} from 'typeorm';\n\nimport { bcRoles, BcRolesType, BC_ROLES } from '@core-lib';\n\n@Entity()\n@Unique(['username'])\n@Unique(['email'])\nexport class AuthUser {\n  @PrimaryGeneratedColumn('uuid')\n  authId: string;\n\n  @Column()\n  _id: string;\n\n  @Column()\n  username: string;\n\n  @Column()\n  @Min(8)\n  password: string;\n\n  @Column()\n  @IsEmail()\n  email: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @BeforeInsert()\n  async hashPassword() {\n    this.password = await hash(this.password, 10);\n  }\n\n  @Column('enum', { default: [bcRoles.guest], array: true, enum: BC_ROLES })\n  roles: BcRolesType[];\n}\n","import { Controller, Logger } from '@nestjs/common';\nimport { MessagePattern } from '@nestjs/microservices';\nimport { AuthService } from './auth.service';\n\n@Controller()\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @MessagePattern({ role: 'auth', cmd: 'check' })\n  async loggedIn(data) {\n    try {\n      console.log(data.jwt);\n      // const res = this.authService.validateToken(data.jwt);\n      const res = { username: 'admin@example.com', _id: '123123123' };\n\n      return res;\n    } catch (e) {\n      Logger.log(e);\n      return false;\n    }\n  }\n\n  @MessagePattern({ role: 'auth', cmd: 'validate' })\n  validateUser(data: { _id: string; token: string }) {\n    return true;\n    return this.authService.validateToken(data.token);\n  }\n\n  @MessagePattern({ role: 'auth', cmd: 'login' })\n  async loginUser(data: { username: string; password: string }) {\n    const { username, password } = data;\n    const user = await this.authService.validateUser({ username, password });\n    Logger.log(user);\n    if (!user) return null;\n\n    return await this.authService.login(user, user.authId);\n  }\n\n  @MessagePattern({ role: 'auth', cmd: 'create' })\n  createUser(data: { username: string; password: string; _id: string }) {\n    return this.authService.createUser(data);\n  }\n\n  @MessagePattern({ role: 'auth', cmd: 'setRoles' })\n  setRoles(data: { _id: string; roles: any }) {\n    return this.authService.updateRoles(data);\n  }\n\n  @MessagePattern({ role: 'auth', cmd: 'get' })\n  async getUser(data: { _id: string }) {\n    const { password, ...user } = await this.authService.getUser(data);\n\n    return user;\n  }\n}\n","import { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { Module } from '@nestjs/common';\nimport { AuthUser } from './auth-user.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([AuthUser]),\n    JwtModule.register({\n      secret: process.env.SESSION_SECRET || 'this-is-my-secret-key',\n      signOptions: { expiresIn: '10h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n","import { Injectable, Logger } from '@nestjs/common';\n\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { compareSync } from 'bcrypt';\n\nimport { InsertResult, Repository } from 'typeorm';\n\nimport { AuthUser } from './auth-user.entity';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(AuthUser)\n    private readonly userRepository: Repository<AuthUser>,\n    private readonly jwtService: JwtService\n  ) {}\n\n  async validateUser(userToCheck: { username: string; password: string }) {\n    const { username, password } = userToCheck;\n\n    const user = await this.userRepository.findOne({ username });\n\n    if (user?.password === password) return user;\n    if (compareSync(password, user?.password)) {\n      return user;\n    }\n\n    return null;\n  }\n\n  async createUser(user: { username: string; password: string; _id: string }): Promise<InsertResult> {\n    const { username, password, _id } = user;\n    const createdAt = new Date();\n    const email = username;\n    try {\n      /**\n       * Perform all needed checks\n       */\n\n      const userEntity = this.userRepository.create({\n        email,\n        password,\n        createdAt,\n        username,\n        _id,\n      });\n\n      const res = await this.userRepository.insert(userEntity);\n\n      Logger.log('createUser - Created user');\n\n      return res;\n    } catch (e) {\n      Logger.log(e);\n      throw e;\n    }\n  }\n\n  async login(user, _id) {\n    const payload = { user, sub: _id };\n    const { password, ...userFields } = user;\n\n    return {\n      ...userFields,\n      accessToken: this.jwtService.sign(payload),\n    };\n  }\n\n  validateToken(jwt: string) {\n    const jwtResult = this.jwtService.verify(jwt);\n    const {\n      user: { username = null, _id = null },\n    } = jwtResult;\n\n    const hasUser = !!jwtResult;\n\n    return hasUser ? { username, _id } : null;\n  }\n\n  async updateRoles(user: { roles: any; _id: string }) {\n    const { _id, roles } = user;\n    return await this.userRepository.update({ _id }, { roles });\n  }\n\n  getUser(user: { _id }) {\n    const { _id } = user;\n    // TODO: Switch this back or make the hardcoded user configurable\n    return this.userRepository.findOne({ email: 'admin@example.com' });\n  }\n}\n","import { registerAs } from '@nestjs/config';\nimport { AuthUser } from './auth/auth-user.entity';\n\nexport default registerAs('auth', () => ({\n  type: 'postgres',\n  host: process.env.POSTGRES_HOST,\n  port: process.env.POSTGRESS_PORT || 5432,\n  username: process.env.POSTGRES_USERNAME,\n  password: process.env.POSTGRES_PASSWORD,\n  database: process.env.POSTGRES_DB,\n  synchronize: process.env.NODE_ENV !== 'production',\n  entities: [AuthUser],\n  msPort: process.env.MS_PORT,\n  msHost: process.env.MS_HOST,\n  msApiPort: process.env.MS_API_PORT,\n}));\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { NestFactory } from '@nestjs/core';\nimport { Transport } from '@nestjs/microservices';\n\nimport { AppModule } from './app/app.module';\nimport { createConnection } from 'typeorm';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const config: ConfigService = await app.get('ConfigService');\n  const globalPrefix = 'auth';\n\n  console.log('the config', config);\n  app.connectMicroservice({\n    transport: Transport.TCP,\n    options: {\n      host: config.get('auth'),\n      port: config.get('auth.msPort'),\n    },\n  });\n\n  await app.startAllMicroservicesAsync();\n  Logger.log('Auth microservice running');\n\n  app.setGlobalPrefix(globalPrefix);\n  // const port = config.get('auth.msApiPort') || 4444;\n}\n\nbootstrap();\n","export * from './lib/core';\n\nexport * from './lib/models/account.model';\nexport * from './lib/models/feed.model';\nexport * from './lib/models/profile.model';\nexport * from './lib/models/stats.model';\nexport * from './lib/models/tag.model';\n\nexport * from './lib/models/api-defaults.model';\n\nexport * from './lib/tokens/auth-tokens.constant';\n\nexport * from './lib/models';\n\nexport * from './lib/tokens';\nexport * from './lib/types/';\n","export function core(): string {\n  return 'core';\n}\n","export class Model<T> {\n  constructor(model?: Partial<T>) {\n    if (model) Object.assign(this, model);\n  }\n}\n","import { ConfigEnum } from '../types/configEnum.type';\n\nexport const ACCOUNT_TYPES = [\n  'Email',\n  'Google',\n  'Facebook',\n  'Instagram',\n] as const;\nexport type AccountType = ConfigEnum<typeof ACCOUNT_TYPES>;\n\nexport interface Account {\n  id?: string;\n  accountType?: AccountType;\n  uid: string;\n  // TODO: Other stuff here...\n}\n","export class ApiDefaults {\n  static get nameString() {\n    return {\n      min: 2,\n      max: 50,\n    };\n  }\n\n  static get string() {\n    return {\n      min: 2,\n      max: 100,\n    };\n  }\n\n  static get longString() {\n    return {\n      min: 10,\n      max: 255,\n    };\n  }\n}\n","import { ConfigEnum } from '../types/configEnum.type';\n\nconst PLAYLIST_CATEGORY = ['rehab', 'builder', 'warmup'] as const;\n\nexport type PlaylistCategoryType = ConfigEnum<typeof PLAYLIST_CATEGORY>;\nconst [rehab, builder, warmup] = PLAYLIST_CATEGORY;\n\nconst MEDIA_CATEGORY = ['strength', 'flexibility', 'endurance'] as const;\n\nexport type MediaCategoryType = ConfigEnum<typeof MEDIA_CATEGORY>;\n\nconst [strength, flexibility, endurance] = MEDIA_CATEGORY;\n\nconst playlistCategories = { rehab, builder, warmup };\n\nconst mediaCategories = { strength, flexibility, endurance };\n\nexport { playlistCategories, mediaCategories, MEDIA_CATEGORY, PLAYLIST_CATEGORY };\n","// TODO: We'll do feeds later!\n//  Not sure how it works now that we are storing our media...\nexport interface Feed {\n  id?: string;\n  displayName?: string; // Friendly name\n  type?: string; // This is the internal name\n}\n\n/* Use users/id/shared to get the shared items */\n","export * from './playlistItem.interface';\nexport * from './bc-base.interface';\nexport * from './auth-user.interface';\nexport * from './categories.model';\nexport * from './validators';\nexport * from './feed.model';\nexport * from './profile.model';\nexport * from './api-defaults.model';\nexport * from './account.model';\nexport * from './tag.model';\nexport * from './user.interface';\nexport * from './stats.model';\nexport * from './roles.enum';\nexport * from './roles.model';\nexport * from './abstract/orderable.model';\nexport * from './abstract/metadata.model';\nexport * from './abstract/media.interface';\nexport * from './abstract/model';\nexport * from './playlist.interface';\n","import { ConfigEnum } from '../types/configEnum.type';\n\nconst BC_ROLES = ['guest', 'user', 'admin'] as const;\n\nexport type BcRolesType = ConfigEnum<typeof BC_ROLES>;\nconst [guest, user, admin] = BC_ROLES;\n\nconst bcRoles = { guest, user, admin } as const;\n\nexport { bcRoles, BC_ROLES };\n","const roleTypes = ['user', 'subscribed', 'admin'] as const;\nexport interface Roles {}\n\nexport class Roles {}\n","import { registerDecorator, ValidationOptions, ValidationArguments, minLength, maxLength } from 'class-validator';\nimport * as R from 'remeda';\n\ntype Gconstructor<T = {}> = new (...args: any[]) => T;\n\ntype BaseConstructor = Gconstructor;\n\nconst nameString = {\n  min: 2,\n  max: 50,\n};\n\nconst VALIDATORS = [nameString.constructor.name, 'longString', 'shortString'] as const;\n\n// type ValidatorsKeyType = typeof VALIDATORS[number];\n\n// const makeValidator = (key: ValidatorsKeyType) => ({ key });\n\n// function minValidatorMixin<TBase extends BaseConstructor>(Base: TBase) {\n//   return class {\n//     constructor ( private length: number ) {\n\n//     }\n//   };\n// }\n\n// const shortStringMin = makeValidator('string');\n\n// // const nameString: readonly [ number, number ] = [ 2, 50 ] as const;\n\n// const validators = [nameString] as const;\n\n// type ValidatorTypes = keyof typeof validators;\n\n// // function makeStringValidator(type: ValidatorTypes) {\n// //   const min = validators[type].min;\n// //   const max = validators[type].max;\n// //   return function (validationOptions?: ValidationOptions) {\n// //     // eslint-disable-next-line @typescript-eslint/ban-types\n// //     return function (object: Object, propertyName: string) {\n// //       registerDecorator({\n// //         name: 'isBcString',\n// //         target: object.constructor,\n// //         propertyName: propertyName,\n// //         options: validationOptions,\n// //         validator: {\n// //           validate(value: any, args: ValidationArguments) {\n// //             const isLongerThan = minLength(value, min);\n// //             const isShorterThan = maxLength(value, max);\n\n// //             return isLongerThan && isShorterThan;\n// //           },\n// //         },\n// //       });\n// //     };\n// //   };\n// // }\n\n// const validatorsArray = R.map(validators, (validator) => Object.create(validator));\n\n// export { validators };\n","const AUTH_CLIENT = 'AUTH_CLIENT';\n\nexport { AUTH_CLIENT };\n","const [PLAYLIST_ENTITY, MEDIA_ITEM_ENTITY] = ['playlist', 'media_item'] as const;\n\nexport { PLAYLIST_ENTITY, MEDIA_ITEM_ENTITY };\n","export * from './auth-tokens.constant';\nexport * from './path-segment-variable-tokens.constant';\nexport * from './entity-tokens.const';\n","const [PLAYLIST_ID] = ['playlistId'] as const;\n\nexport { PLAYLIST_ID };\n","export * from './constructor.type';\nexport * from './configEnum.type';\nexport * from './id.type';\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/microservices\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"bcrypt\");","module.exports = require(\"class-validator\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");"],"sourceRoot":""}